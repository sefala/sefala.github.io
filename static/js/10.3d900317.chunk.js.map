{"version":3,"sources":["hooks/useStake.ts","views/Farms/components/WithdrawModal.tsx","views/Boardroom/components/Harvest.tsx","views/Boardroom/components/ProgressCountdown.tsx","views/Boardroom/components/Stat.tsx","views/Boardroom/components/Stake.tsx","views/Boardroom/Boardroom.tsx"],"names":["useStake","contractPid","type","dispatch","useDispatch","account","useWallet","masterChefContract","useMasterchef","onStake","useCallback","amount","a","stake","fetchFarmUserDataAsync","useStakeToBoardroom","contract","useBoardroom","stakeBoardroom","useWithdrawFromBoardroom","onWithdraw","unstakeBoardroom","WithdrawModal","onConfirm","onDismiss","max","tokenName","useState","val","setVal","pendingTx","setPendingTx","TranslateString","useI18n","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","value","handleSelectMax","title","onSelectMax","onChange","symbol","variant","onClick","disabled","StyledCardHeader","styled","div","StyledCardActions","props","theme","spacing","StyledCardContentInner","Harvest","canClaimReward","onReward","useHarvestFromBoardroom","earnings","useEarningsOnBoardroom","token","Value","toFixed","Label","text","StyledCountdown","p","StyledProgressOuter","colors","contrast","StyledProgress","progress","invertedContrast","StyledDesc","span","ProgressCountdown","base","deadline","description","percentage","Date","now","getTime","date","renderer","countdownProps","days","hours","minutes","seconds","h","String","m","s","padStart","StyledCardTitle","secondary","StyledIcon","StyledTextWrapper","Stat","icon","IconButtonWrapper","Stake","canWithdraw","balanceOf","requestedApproval","setRequestedApproval","useApproveBoardroom","onApprove","isApproved","tokenBalance","useTokenBalance","QuoteToken","SSO","handleApprove","console","error","useModal","DepositModal","onPresentDeposit","onPresentWithdraw","mr","color","launchTime","StyledBoardroom","StyledHeader","StyledCardsWrapper","StyledCardWrapper","Wrapper","BoardroomHeader","as","size","mb","style","textAlign","Boardroom","onRedeem","useExitBoardroom","useBoardroomState","epoch","totalSupply","cashStat","useCashPriceInEstimatedTWAP","useTreasuryAllocationTimes","prevAllocation","nextAllocation","Page","Flex","Spacer","UnlockButton","mt","fullWidth","LaunchCountdown"],"mappings":"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","file":"static/js/10.3d900317.chunk.js","sourcesContent":["import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { Farm } from 'state/types'\nimport { stake, restake, stakeBoardroom, unstakeBoardroom } from 'utils/callHelpers'\nimport { useBoardroom, useMasterchef } from './useContract'\nimport { fetchFarmUserDataAsync } from '../state/farms'\n\nexport const useStake = ({ contractPid, type }: Farm) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      await stake(masterChefContract, contractPid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n    },\n    [account, dispatch, masterChefContract, contractPid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useStakeToBoardroom = () => {\n  const { account } = useWallet()\n  const contract = useBoardroom()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      await stakeBoardroom(contract, amount, account)\n    },\n    [account, contract],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useWithdrawFromBoardroom = () => {\n  const { account } = useWallet()\n  const contract = useBoardroom()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      await unstakeBoardroom(contract, amount, account)\n    },\n    [account, contract],\n  )\n\n  return { onWithdraw: handleStake }\n}\n\nexport const useReStake = ({ contractPid, type }: Farm) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleStake = useCallback(async () => {\n    const txHash = await restake(masterChefContract, contractPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    console.info(txHash)\n  }, [account, dispatch, masterChefContract, contractPid])\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import useHarvestFromBoardroom, { useEarningsOnBoardroom } from 'hooks/useHarvestFromBoardroom'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Card } from 'uikit'\r\nimport Value from 'components/Value'\r\nimport Label from 'components/Label'\r\nimport { CardLogo } from 'views/Home/Home'\r\n\r\nconst Harvest: React.FC<any> = ({ canClaimReward }) => {\r\n  const { onReward } = useHarvestFromBoardroom()\r\n  const earnings = useEarningsOnBoardroom()\r\n\r\n  return (\r\n    <Card>\r\n      <CardLogo token=\"sdo\">\r\n        <StyledCardContentInner>\r\n          <StyledCardHeader>\r\n            <Value value={earnings.toFixed(4)} />\r\n            <Label text=\"SDO Earned\" />\r\n          </StyledCardHeader>\r\n          <StyledCardActions>\r\n            <Button onClick={onReward} disabled={!canClaimReward}>\r\n              Claim Reward\r\n            </Button>\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardLogo>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[6]}px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default Harvest\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Countdown, { CountdownRenderProps } from 'react-countdown';\r\nimport { Card } from 'uikit';\r\n\r\ninterface ProgressCountdownProps {\r\n  base: Date;\r\n  deadline: Date;\r\n  description: string;\r\n}\r\n\r\nconst ProgressCountdown: React.FC<ProgressCountdownProps> = ({\r\n  base,\r\n  deadline,\r\n  description,\r\n}) => {\r\n  const percentage =\r\n    Date.now() >= deadline.getTime()\r\n      ? 100\r\n      : ((Date.now() - base.getTime()) / (deadline.getTime() - base.getTime())) * 100;\r\n\r\n  const countdownRenderer = (countdownProps: CountdownRenderProps) => {\r\n    const { days, hours, minutes, seconds } = countdownProps;\r\n    const h = String(days * 24 + hours);\r\n    const m = String(minutes);\r\n    const s = String(seconds);\r\n    return (\r\n      <StyledCountdown>\r\n        {h.padStart(2, '0')}:{m.padStart(2, '0')}:{s.padStart(2, '0')}\r\n      </StyledCountdown>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <Card>\r\n      <StyledCardContentInner>\r\n        <StyledDesc>{description}</StyledDesc>\r\n        <Countdown date={deadline} renderer={countdownRenderer} />\r\n        <StyledProgressOuter>\r\n          <StyledProgress progress={percentage} />\r\n        </StyledProgressOuter>\r\n      </StyledCardContentInner>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst StyledCountdown = styled.p`\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  margin: 0 0 6px 0;\r\n`;\r\n\r\nconst StyledProgressOuter = styled.div`\r\n  width: 100%;\r\n  height: 8px;\r\n  border-radius: 3px;\r\n  background: ${(props) => props.theme.colors.contrast};\r\n`;\r\n\r\nconst StyledProgress = styled.div<{ progress: number }>`\r\n  width: ${(props) => props.progress}%;\r\n  height: 100%;\r\n  border-radius: 3px;\r\n  background: ${(props) => props.theme.colors.invertedContrast};\r\n`;\r\n\r\nconst StyledDesc = styled.span`\r\n  font-weight: 700;\r\n  font-size: 12px;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: ${(props) => props.theme.spacing[2]}px ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nexport default ProgressCountdown;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card } from 'uikit'\r\n\r\ninterface StatProps {\r\n  icon: string\r\n  title: string\r\n  description: string\r\n}\r\n\r\nconst Stat: React.FC<StatProps> = ({ icon, title, description }) => (\r\n  <Card>\r\n    <StyledCardContentInner>\r\n      <StyledIcon>{icon}</StyledIcon>\r\n      <StyledTextWrapper>\r\n        <StyledCardTitle>{title}</StyledCardTitle>\r\n        <StyledDesc>{description}</StyledDesc>\r\n      </StyledTextWrapper>\r\n    </StyledCardContentInner>\r\n  </Card>\r\n)\r\n\r\nconst StyledCardTitle = styled.div`\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  padding-bottom: 4px;\r\n`\r\n\r\nconst StyledDesc = styled.span`\r\n  font-size: 14px;\r\n  color: ${(props) => props.theme.colors.secondary};\r\n`\r\n\r\nconst StyledIcon = styled.span`\r\n  font-size: 28px;\r\n  margin-right: 10px;\r\n`\r\n\r\nconst StyledTextWrapper = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  padding: ${(props) => props.theme.spacing[2]}px ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nexport default Stat\r\n","import React, { useCallback, useState } from 'react'\r\nimport { useApproveBoardroom } from 'hooks/useApprove'\r\nimport styled from 'styled-components'\r\nimport DepositModal from 'views/Farms/components/DepositModal'\r\nimport WithdrawModal from 'views/Farms/components/WithdrawModal'\r\nimport { AddIcon, Button, Card, IconButton, MinusIcon, useModal } from 'uikit'\r\nimport Value from 'components/Value'\r\nimport Label from 'components/Label'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { useStakeToBoardroom, useWithdrawFromBoardroom } from 'hooks/useStake'\r\nimport { CardLogo } from 'views/Home/Home'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst Stake: React.FC<any> = ({ canWithdraw, balanceOf }) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { onApprove, isApproved } = useApproveBoardroom()\r\n  const tokenBalance = useTokenBalance(QuoteToken.SSO)\r\n  const { onStake } = useStakeToBoardroom()\r\n  const { onWithdraw } = useWithdrawFromBoardroom()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const [onPresentDeposit] = useModal(<DepositModal max={tokenBalance} onConfirm={onStake} tokenName=\"SSO\" />)\r\n  const [onPresentWithdraw] = useModal(<WithdrawModal max={balanceOf} onConfirm={onWithdraw} tokenName=\"SSO\" />)\r\n\r\n  return (\r\n    <Card>\r\n      <CardLogo token=\"sso\">\r\n        <StyledCardContentInner>\r\n          <StyledCardHeader>\r\n            <Value value={balanceOf?.toFixed(4)} />\r\n            <Label text=\"SSO Staked\" />\r\n          </StyledCardHeader>\r\n          <StyledCardActions>\r\n            {!isApproved ? (\r\n              <Button disabled={requestedApproval} onClick={handleApprove}>\r\n                Approve SSO\r\n              </Button>\r\n            ) : (\r\n              <IconButtonWrapper>\r\n                <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\" disabled={!canWithdraw}>\r\n                  <MinusIcon color=\"primary\" />\r\n                </IconButton>\r\n                <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\r\n                  <AddIcon color=\"primary\" />\r\n                </IconButton>\r\n              </IconButtonWrapper>\r\n            )}\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardLogo>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[6]}px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default Stake\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport Spacer from 'components/Spacer'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport LaunchCountdown from 'components/LaunchCountdown'\r\nimport useExitBoardroom, { useCashPriceInEstimatedTWAP, useTreasuryAllocationTimes } from 'hooks/useExitBoardroom'\r\nimport { Heading, Button, Text } from 'uikit'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport Page from 'components/layout/Page'\r\nimport { useBoardroomState } from 'hooks/useHarvestFromBoardroom'\r\nimport Harvest from './components/Harvest'\r\nimport ProgressCountdown from './components/ProgressCountdown'\r\nimport Stat from './components/Stat'\r\nimport Stake from './components/Stake'\r\n\r\nconst launchTime = new Date(1617041760000)\r\n\r\nconst StyledBoardroom = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst StyledHeader = styled.div`\r\n  justify-content: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-bottom: ${(props) => props.theme.spacing[5]}px;\r\n  width: 960px;\r\n\r\n  > * {\r\n    flex: 1;\r\n    height: 84px;\r\n    margin: 0 ${(props) => props.theme.spacing[2]}px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst StyledCardsWrapper = styled.div`\r\n  display: flex;\r\n  width: 600px;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst BoardroomHeader = () => {\r\n  return (\r\n    <Heading as=\"h1\" size=\"lg\" mb=\"50px\" style={{ textAlign: 'center' }}>\r\n      💱 Boardroom\r\n    </Heading>\r\n  )\r\n}\r\n\r\nconst Boardroom: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const { onRedeem } = useExitBoardroom()\r\n  const [balanceOf, canWithdraw, canClaimReward, epoch, totalSupply] = useBoardroomState()\r\n\r\n  const cashStat = useCashPriceInEstimatedTWAP()\r\n  const { prevAllocation, nextAllocation } = useTreasuryAllocationTimes()\r\n\r\n  const isLaunched = Date.now() >= launchTime.getTime()\r\n\r\n  if (!isLaunched) {\r\n    return (\r\n      <Page>\r\n        <BoardroomHeader />\r\n        <Wrapper>\r\n          <LaunchCountdown deadline={launchTime} />\r\n        </Wrapper>\r\n      </Page>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <FlexLayout>\r\n        <BoardroomHeader />\r\n        {account && (\r\n          <Button disabled={!canWithdraw} onClick={onRedeem}>\r\n            Settle & Withdraw\r\n          </Button>\r\n        )}\r\n      </FlexLayout>\r\n      <StyledHeader>\r\n        <Stat icon=\"⌛\" title={epoch} description=\"Epoch\" />\r\n        <ProgressCountdown base={prevAllocation} deadline={nextAllocation} description=\"Next Epoch\" />\r\n        <Stat icon=\"💵\" title={cashStat ? `$${cashStat.toFixed(3)}` : '-'} description=\"SDO Price (TWAP)\" />\r\n        <Stat icon=\"💰\" title={totalSupply ? `$${totalSupply.toFixed(3)}` : '-'} description=\"Treasury Amount\" />\r\n      </StyledHeader>\r\n      <StyledBoardroom>\r\n        <StyledCardsWrapper>\r\n          {account ? (\r\n            <>\r\n              <StyledCardWrapper>\r\n                <Harvest canClaimReward={canClaimReward} />\r\n              </StyledCardWrapper>\r\n              <Spacer />\r\n              <StyledCardWrapper>\r\n                <Stake balanceOf={balanceOf} canWithdraw={canWithdraw} />\r\n              </StyledCardWrapper>\r\n            </>\r\n          ) : (\r\n            <UnlockButton mt=\"8px\" fullWidth />\r\n          )}\r\n        </StyledCardsWrapper>\r\n        <Spacer />\r\n        <Text>Lock for 6 epochs (36-48h) before release Withdraw.</Text>\r\n        <Spacer />\r\n        <Text>Lock for 3 epochs (18-24h) before release Claim Reward.</Text>\r\n      </StyledBoardroom>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Boardroom\r\n"],"sourceRoot":""}