{"version":3,"sources":["components/layout/Flex.tsx","hooks/useTokenBalance.ts","components/Value/Value.tsx","components/Label/Label.tsx","views/Home/components/CardValue.tsx","views/Home/components/CakeStats.tsx","views/Home/Home.tsx","components/UnlockButton.tsx","hooks/useExitBoardroom.ts","views/Farms/components/WithdrawModal.tsx","views/Boardroom/components/Stake.tsx","views/Boardroom/components/Harvest.tsx","views/Boardroom/components/ProgressCountdown.tsx","views/Boardroom/components/Stat.tsx","views/Boardroom/BoardroomToken.tsx","views/Boardroom/Boardroom.tsx","views/Boardroom/index.ts"],"names":["FlexLayout","styled","div","useTokenBalanceInAddress","token","address","useState","BigNumber","balance","setBalance","ethereum","useWallet","fastRefresh","useRefresh","useEffect","a","tokenAddress","getTokenAddress","getTokenBalance","res","fetchBalance","useTokenBalance","account","StyledValue","props","theme","colors","primary","Value","value","decimals","prefix","fontSize","start","updateStart","end","updateEnd","style","undefined","duration","separator","StyledLabel","isFinished","Label","text","CardValue","useCountUp","countUp","update","updateValue","useRef","current","color","bold","CakeStats","totalValue","useTotalValue","flexDirection","alignContent","justifyContent","size","mb","toNumber","CardLogo","CardBody","StyledCardHeader","CenterHeading","Heading","Logo","oneUnit","pow","Home","prices","usePrices","useSupplyState","totalSdo","totalSso","totalSbnb","burned","QuoteToken","SDO","sdoAddress","contracts","CHAIN_ID","ssoAddress","SSO","sbnbAddress","SBNB","Page","Flex","Spacer","minus","small","href","mr","UnlockButton","TranslateString","useI18n","connect","reset","onPresentConnectModal","useWalletModal","onClick","useCashPriceInEstimatedTWAP","type","stat","setStat","contract","useTreasury","slowRefresh","methods","getDollarPrice","call","then","x","useBnbPriceTWAP","useIfo","getBnbPrice","useTreasuryAllocationTimes","prevAllocation","Date","nextAllocation","nextEpochLength","time","setTime","getTreasury","calls","name","params","multicall","treasury","nextEpochPoint","lastEpochTimestamp","multipliedBy","fetchAllocations","useBondStats","data","setData","getBurnableDollarLeft","getRedeemableBonds","useExitBoardroom","useBoardroom","onRedeem","useCallback","exit","send","from","txHash","WithdrawModal","onConfirm","onDismiss","max","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","onSelectMax","onChange","symbol","variant","disabled","IconButtonWrapper","Divider","borderColor","launchTime","StyledCardActions","spacing","StyledCardContentInner","Stake","canWithdraw","balanceOf","balanceOfRaw","requestedApproval","setRequestedApproval","useApproveBoardroom","onApprove","isApproved","tokenBalance","onStake","useStakeToBoardroom","onWithdraw","useWithdrawFromBoardroom","handleApprove","console","error","useModal","DepositModal","onPresentDeposit","onPresentWithdraw","isLaunched","now","getTime","toFixed","date","renderer","countdownProps","days","hours","minutes","seconds","paddedSeconds","paddedMinutes","paddedHours","paddedDays","pr","Harvest","canClaimReward","onReward","useHarvestFromBoardroom","earnings","useEarningsOnBoardroom","toString","toLocaleLowerCase","StyledCountdown","p","StyledProgressOuter","contrast","StyledProgress","progress","invertedContrast","StyledDesc","span","ProgressCountdown","base","deadline","description","percentage","h","String","m","s","padStart","StyledCardTitle","secondary","StyledIcon","StyledTextWrapper","Stat","icon","StyledBoardroom","StyledHeader","StyledCardsWrapper","StyledCardWrapper","BoardroomToken","priceS","usePriceShare","useBoardroomState","epoch","totalSupply","cashStat","price","times","toLocaleString","as","textAlign","mt","fullWidth","Wrapper","BoardTabButtons","useRouteMatch","url","isExact","activeIndex","Link","to","Boardroom","path","exact","PegType"],"mappings":"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","file":"static/js/10.58ff2206.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { QuoteToken } from 'config/constants/types'\nimport { getTokenAddress } from 'utils/addressHelpers'\nimport { provider } from 'web3-core'\nimport { getTokenBalance } from 'utils/erc20'\nimport useRefresh from './useRefresh'\nimport { useToken } from './useContract'\n\nconst useTokenBalance = (token: QuoteToken) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n  const tokenAddress = getTokenAddress(token)\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTokenBalanceInAddress = (token: QuoteToken, address: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { ethereum }: { ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const tokenAddress = getTokenAddress(token)\n      const res = await getTokenBalance(ethereum, tokenAddress, address)\n      setBalance(new BigNumber(res))\n    }\n\n    if (address && ethereum) {\n      fetchBalance()\n    }\n  }, [address, ethereum, token, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = (token: QuoteToken) => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n  const contract = useToken(token)\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const supply = await contract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh, contract])\n\n  return totalSupply\n}\n\nexport default useTokenBalance\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\n\ninterface ValueProps {\n  value: string | number\n  decimals?: number\n  prefix?: string\n  fontSize?: string | number\n}\n\nconst Value: React.FC<ValueProps> = ({ value, decimals, prefix= '', fontSize = '30px' }) => {\n  const [start, updateStart] = useState(0)\n  const [end, updateEnd] = useState(0)\n\n  useEffect(() => {\n    if (typeof value === 'number') {\n      updateStart(end)\n      updateEnd(value)\n    }\n  }, [value])\n\n  return (\n    <StyledValue style={{ fontSize }}>\n      {typeof value === 'string' ? (\n        value\n      ) : (\n        <CountUp\n          start={start}\n          end={end}\n          decimals={\n            // eslint-disable-next-line no-nested-ternary\n            decimals !== undefined ? decimals : end < 0 ? 4 : end > 1e5 ? 0 : 3\n          }\n          duration={1}\n          separator=\",\"\n          prefix={prefix}\n        />\n      )}\n    </StyledValue>\n  )\n}\n\nconst StyledValue = styled.div`\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 30px;\n  font-weight: 900;\n`\n\nexport default Value\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from 'uikit'\n\ninterface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  prefix?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px', prefix }) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text color=\"textSubtle\" bold fontSize={fontSize}>\n      {prefix}{countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import React from 'react'\nimport { Heading, Flex } from 'uikit'\nimport CardValue from './CardValue'\nimport { useTotalValue } from '../../../state/hooks'\n\nconst CakeStats = () => {\n  const totalValue = useTotalValue()\n\n  return (\n    <Flex flexDirection=\"column\" alignContent=\"center\" justifyContent=\"center\">\n      <Heading size=\"lg\" mb=\"24px\">\n        Total Value Locked (TVL)\n      </Heading>\n      <CardValue value={totalValue.toNumber()} prefix=\"$\" decimals={2} />\n    </Flex>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, Heading, LinkExternal } from 'uikit'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useSupplyState } from 'hooks/useHarvestFromBoardroom'\nimport { usePrices } from 'state/hooks'\nimport Value from 'components/Value'\nimport Spacer from 'components/Spacer'\nimport { useTokenBalanceInAddress } from 'hooks/useTokenBalance'\nimport Label from 'components/Label'\nimport { QuoteToken } from 'config/constants/types'\nimport contracts from 'config/constants/contracts'\nimport CakeStats from './components/CakeStats'\n\nexport const CardLogo = styled(CardBody)<{ token: string }>`\n  background-image: url('/images/tokens/${({ token }) => token}.png');\n  background-repeat: no-repeat;\n  background-position: center 10px;\n  background-size: 100px 100px;\n  padding-top: 120px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n`\n\nconst CenterHeading = styled(Heading)`\n  text-align: center;\n`\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst Logo = styled.div`\n  background-image: url('/images/supra.png');\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  height: 80px;\n  width: 400px;\n`\n\nconst oneUnit = new BigNumber(10).pow(18)\n\nconst Home: React.FC = () => {\n  const prices = usePrices()\n  const [totalSdo, totalSso, totalSbnb] = useSupplyState()\n  const burned = useTokenBalanceInAddress(QuoteToken.SDO, '0x000000000000000000000000000000000000dEaD')\n  const sdoAddress = contracts[QuoteToken.SDO][CHAIN_ID]\n  const ssoAddress = contracts[QuoteToken.SSO][CHAIN_ID]\n  const sbnbAddress = contracts[QuoteToken.SBNB][CHAIN_ID]\n\n  return (\n    <Page>\n      <FlexLayout>\n        <Logo />\n        <Spacer />\n        <CakeStats />\n      </FlexLayout>\n      <FlexLayout>\n        <Card>\n          <CardLogo token=\"sdo\">\n            <CenterHeading>Supra Dollar</CenterHeading>\n            <StyledCardHeader>\n              <Value value={totalSdo.minus(burned.div(oneUnit)).toNumber()} decimals={0} />\n              <Label text=\"Circulating Supply\" />\n            </StyledCardHeader>\n            <StyledCardHeader>\n              <Value value={prices.SDO?.toNumber()} prefix=\"$\" />\n              <Label text=\"Price\" />\n            </StyledCardHeader>\n            <StyledCardHeader>\n              <LinkExternal small href={`https://dex.slime.finance/#/swap?outputCurrency=${sdoAddress}`} mr=\"16px\">\n                Buy SDO\n              </LinkExternal>\n            </StyledCardHeader>\n          </CardLogo>\n        </Card>\n        <Card>\n          <CardLogo token=\"sso\">\n            <CenterHeading>Supra Dollar Share</CenterHeading>\n            <StyledCardHeader>\n              <Value value={totalSso.toNumber()} decimals={0} />\n              <Label text=\"Total Supply\" />\n            </StyledCardHeader>\n            <StyledCardHeader>\n              <Value value={prices.SSO?.toNumber()} prefix=\"$\" />\n              <Label text=\"Price\" />\n            </StyledCardHeader>\n            <StyledCardHeader>\n              <LinkExternal small href={`https://dex.slime.finance/#/swap?outputCurrency=${ssoAddress}`} mr=\"16px\">\n                Buy SSO\n              </LinkExternal>\n            </StyledCardHeader>\n          </CardLogo>\n        </Card>\n        <Card>\n          <CardLogo token=\"sbnb\">\n            <CenterHeading>Supra BNB</CenterHeading>\n            <StyledCardHeader>\n              <Value value={totalSbnb.toNumber()} decimals={0} />\n              <Label text=\"Circulating Supply\" />\n            </StyledCardHeader>\n            <StyledCardHeader>\n              <Value value={prices.SBNB?.toNumber()} prefix=\"$\" />\n              <Label text=\"Price\" />\n            </StyledCardHeader>\n            <StyledCardHeader>\n              <LinkExternal small href={`https://dex.slime.finance/#/swap?outputCurrency=${sbnbAddress}`} mr=\"16px\">\n                Buy SBNB\n              </LinkExternal>\n            </StyledCardHeader>\n          </CardLogo>\n        </Card>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { Button, useWalletModal } from 'uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { useCallback, useEffect, useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { TreasuryAllocationTime } from 'utils'\r\nimport { getTreasury } from 'utils/addressHelpers'\r\nimport multicall from 'utils/multicall'\r\nimport treasury from 'config/abi/treasury.json'\r\nimport BigNumber from 'bignumber.js'\r\nimport { PegType } from 'config/constants/types'\r\nimport { useBoardroom, useIfo, useTreasury } from './useContract'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useExitBoardroom = (type: PegType) => {\r\n  const { account } = useWallet()\r\n  const contract = useBoardroom(type)\r\n\r\n  const handleExit = useCallback(async () => {\r\n    const txHash = await contract.methods.exit().send({ from: account })\r\n    return txHash\r\n  }, [account, contract])\r\n\r\n  return { onRedeem: handleExit }\r\n}\r\n\r\nconst oneUnit = new BigNumber(10).pow(18)\r\n\r\nexport const useCashPriceInEstimatedTWAP = (type: PegType) => {\r\n  const [stat, setStat] = useState(new BigNumber(10).div(oneUnit))\r\n  const contract = useTreasury(type)\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    contract.methods\r\n      .getDollarPrice()\r\n      .call()\r\n      .then((x) => setStat(new BigNumber(x).div(oneUnit)))\r\n  }, [contract, slowRefresh])\r\n\r\n  return stat\r\n}\r\n\r\nexport const useBnbPriceTWAP = () => {\r\n  const [stat, setStat] = useState(new BigNumber(10).div(oneUnit))\r\n  const contract = useIfo()\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    contract.methods\r\n      .getBnbPrice()\r\n      .call()\r\n      .then((x) => setStat(new BigNumber(x).div(oneUnit)))\r\n  }, [contract, slowRefresh])\r\n\r\n  return stat\r\n}\r\n\r\nexport const useTreasuryAllocationTimes = (type: PegType) => {\r\n  const [time, setTime] = useState<TreasuryAllocationTime>({\r\n    prevAllocation: new Date(),\r\n    nextAllocation: new Date(),\r\n    nextEpochLength: 0,\r\n  })\r\n  const contract = getTreasury(type)\r\n\r\n  useEffect(() => {\r\n    const fetchAllocations = async () => {\r\n      const calls = [\r\n        {\r\n          address: contract,\r\n          name: 'nextEpochPoint',\r\n          params: [],\r\n        },\r\n        {\r\n          address: contract,\r\n          name: 'lastEpochTime',\r\n          params: [],\r\n        },\r\n        {\r\n          address: contract,\r\n          name: 'nextEpochLength',\r\n          params: [],\r\n        },\r\n      ]\r\n\r\n      const [nextEpochPoint, lastEpochTimestamp, nextEpochLength] = await multicall((treasury as unknown) as any, calls)\r\n      setTime({\r\n        nextAllocation: new Date(new BigNumber(nextEpochPoint).multipliedBy(1000).toNumber()),\r\n        prevAllocation: new Date(new BigNumber(lastEpochTimestamp).multipliedBy(1000).toNumber()),\r\n        nextEpochLength: new BigNumber(nextEpochLength).toNumber(),\r\n      })\r\n    }\r\n\r\n    if (contract) fetchAllocations()\r\n  }, [contract])\r\n  return time\r\n}\r\n\r\nexport const useBondStats = (type: PegType) => {\r\n  const [data, setData] = useState([new BigNumber(0), new BigNumber(0)])\r\n  const contract = getTreasury(type)\r\n\r\n  useEffect(() => {\r\n    const fetchAllocations = async () => {\r\n      const calls = [\r\n        {\r\n          address: contract,\r\n          name: 'getBurnableDollarLeft',\r\n          params: [],\r\n        },\r\n        {\r\n          address: contract,\r\n          name: 'getRedeemableBonds',\r\n          params: [],\r\n        },\r\n      ]\r\n\r\n      const [getBurnableDollarLeft, getRedeemableBonds] = await multicall((treasury as unknown) as any, calls)\r\n      setData([new BigNumber(getBurnableDollarLeft).div(oneUnit), new BigNumber(getRedeemableBonds).div(oneUnit)])\r\n    }\r\n\r\n    if (contract) fetchAllocations()\r\n  }, [contract])\r\n  return data\r\n}\r\n\r\nexport default useExitBoardroom\r\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React, { useCallback, useState } from 'react'\r\nimport { useApproveBoardroom } from 'hooks/useApprove'\r\nimport styled from 'styled-components'\r\nimport DepositModal from 'views/Farms/components/DepositModal'\r\nimport WithdrawModal from 'views/Farms/components/WithdrawModal'\r\nimport { AddIcon, Button, Card, IconButton, MinusIcon, useModal, Text } from 'uikit'\r\nimport Value from 'components/Value'\r\nimport Label from 'components/Label'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { useStakeToBoardroom, useWithdrawFromBoardroom } from 'hooks/useStake'\r\nimport { CardLogo } from 'views/Home/Home'\r\nimport Countdown, { CountdownRenderProps } from 'react-countdown'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  height: 1px;\r\n  margin: 19px auto;\r\n  width: 100%;\r\n`\r\nconst launchTime = new Date(1618142400000)\r\n\r\nconst Stake: React.FC<any> = ({ canWithdraw, balanceOf, balanceOfRaw, type }) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { onApprove, isApproved } = useApproveBoardroom(type)\r\n  const tokenBalance = useTokenBalance(QuoteToken.SSO)\r\n  const { onStake } = useStakeToBoardroom(type)\r\n  const { onWithdraw } = useWithdrawFromBoardroom(type)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const [onPresentDeposit] = useModal(<DepositModal max={tokenBalance} onConfirm={onStake} tokenName=\"SSO\" />)\r\n  const [onPresentWithdraw] = useModal(<WithdrawModal max={balanceOfRaw} onConfirm={onWithdraw} tokenName=\"SSO\" />)\r\n\r\n  const isLaunched = Date.now() >= launchTime.getTime()\r\n\r\n  const renderer = (countdownProps: CountdownRenderProps) => {\r\n    const { days, hours, minutes, seconds } = countdownProps\r\n    const paddedSeconds = seconds < 10 ? `0${seconds}` : seconds\r\n    const paddedMinutes = minutes < 10 ? `0${minutes}` : minutes\r\n    const paddedHours = hours < 10 ? `0${hours}` : hours\r\n    const paddedDays = days > 0 ? `${days} days and ` : ''\r\n\r\n    return (\r\n      <>\r\n        <Text pr=\"3px\">\r\n          Boardroom starts: {paddedDays}\r\n          {paddedHours}:{paddedMinutes}:{paddedSeconds}\r\n        </Text>\r\n        <Divider />\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardLogo token=\"sso\">\r\n        <StyledCardContentInner>\r\n          <StyledCardHeader>\r\n            <Value value={balanceOf?.toFixed(4)} />\r\n            <Label text=\"SSO Staked\" />\r\n          </StyledCardHeader>\r\n          <StyledCardActions>\r\n            {!isLaunched && (\r\n              <div>\r\n                <Countdown date={launchTime} renderer={renderer} />\r\n              </div>\r\n            )}\r\n            {!isApproved ? (\r\n              <Button disabled={requestedApproval} onClick={handleApprove}>\r\n                Approve SSO\r\n              </Button>\r\n            ) : (\r\n              <IconButtonWrapper>\r\n                <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\" disabled={!canWithdraw}>\r\n                  <MinusIcon color=\"primary\" />\r\n                </IconButton>\r\n                <IconButton variant=\"tertiary\" onClick={onPresentDeposit} disabled={!isLaunched}>\r\n                  <AddIcon color=\"primary\" />\r\n                </IconButton>\r\n              </IconButtonWrapper>\r\n            )}\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardLogo>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[6]}px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default Stake\r\n","import useHarvestFromBoardroom, { useEarningsOnBoardroom } from 'hooks/useHarvestFromBoardroom'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Card } from 'uikit'\r\nimport Value from 'components/Value'\r\nimport Label from 'components/Label'\r\nimport { CardLogo } from 'views/Home/Home'\r\n\r\nconst Harvest: React.FC<any> = ({ canClaimReward, type }) => {\r\n  const { onReward } = useHarvestFromBoardroom(type)\r\n  const earnings = useEarningsOnBoardroom(type)\r\n\r\n  return (\r\n    <Card>\r\n      <CardLogo token={`${type.toString().toLocaleLowerCase()}`}>\r\n        <StyledCardContentInner>\r\n          <StyledCardHeader>\r\n            <Value value={earnings.toFixed(4)} />\r\n            <Label text={`${type} Earned`} />\r\n          </StyledCardHeader>\r\n          <StyledCardActions>\r\n            <Button onClick={onReward} disabled={!canClaimReward}>\r\n              Claim Reward\r\n            </Button>\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardLogo>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[6]}px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default Harvest\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Countdown, { CountdownRenderProps } from 'react-countdown';\r\nimport { Card } from 'uikit';\r\n\r\ninterface ProgressCountdownProps {\r\n  base: Date;\r\n  deadline: Date;\r\n  description: string;\r\n}\r\n\r\nconst ProgressCountdown: React.FC<ProgressCountdownProps> = ({\r\n  base,\r\n  deadline,\r\n  description,\r\n}) => {\r\n  const percentage =\r\n    Date.now() >= deadline.getTime()\r\n      ? 100\r\n      : ((Date.now() - base.getTime()) / (deadline.getTime() - base.getTime())) * 100;\r\n\r\n  const countdownRenderer = (countdownProps: CountdownRenderProps) => {\r\n    const { days, hours, minutes, seconds } = countdownProps;\r\n    const h = String(days * 24 + hours);\r\n    const m = String(minutes);\r\n    const s = String(seconds);\r\n    return (\r\n      <StyledCountdown>\r\n        {h.padStart(2, '0')}:{m.padStart(2, '0')}:{s.padStart(2, '0')}\r\n      </StyledCountdown>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <Card>\r\n      <StyledCardContentInner>\r\n        <StyledDesc>{description}</StyledDesc>\r\n        <Countdown date={deadline} renderer={countdownRenderer} />\r\n        <StyledProgressOuter>\r\n          <StyledProgress progress={percentage} />\r\n        </StyledProgressOuter>\r\n      </StyledCardContentInner>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst StyledCountdown = styled.p`\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  margin: 0 0 6px 0;\r\n`;\r\n\r\nconst StyledProgressOuter = styled.div`\r\n  width: 100%;\r\n  height: 8px;\r\n  border-radius: 3px;\r\n  background: ${(props) => props.theme.colors.contrast};\r\n`;\r\n\r\nconst StyledProgress = styled.div<{ progress: number }>`\r\n  width: ${(props) => props.progress}%;\r\n  height: 100%;\r\n  border-radius: 3px;\r\n  background: ${(props) => props.theme.colors.invertedContrast};\r\n`;\r\n\r\nconst StyledDesc = styled.span`\r\n  font-weight: 700;\r\n  font-size: 12px;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: ${(props) => props.theme.spacing[2]}px ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nexport default ProgressCountdown;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card } from 'uikit'\r\n\r\ninterface StatProps {\r\n  icon: string\r\n  title: string\r\n  description: string\r\n}\r\n\r\nconst Stat: React.FC<StatProps> = ({ icon, title, description }) => (\r\n  <Card>\r\n    <StyledCardContentInner>\r\n      <StyledIcon>{icon}</StyledIcon>\r\n      <StyledTextWrapper>\r\n        <StyledCardTitle>{title}</StyledCardTitle>\r\n        <StyledDesc>{description}</StyledDesc>\r\n      </StyledTextWrapper>\r\n    </StyledCardContentInner>\r\n  </Card>\r\n)\r\n\r\nconst StyledCardTitle = styled.div`\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  padding-bottom: 4px;\r\n`\r\n\r\nconst StyledDesc = styled.span`\r\n  font-size: 14px;\r\n  color: ${(props) => props.theme.colors.secondary};\r\n`\r\n\r\nconst StyledIcon = styled.span`\r\n  font-size: 28px;\r\n  margin-right: 10px;\r\n`\r\n\r\nconst StyledTextWrapper = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  padding: ${(props) => props.theme.spacing[2]}px ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nexport default Stat\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useExitBoardroom, { useCashPriceInEstimatedTWAP, useTreasuryAllocationTimes } from 'hooks/useExitBoardroom'\r\nimport { Heading, Button, Text, CardBody, Card } from 'uikit'\r\nimport { useBoardroomState } from 'hooks/useHarvestFromBoardroom'\r\nimport { PegType } from 'config/constants/types'\r\nimport { usePriceShare } from 'state/hooks'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Spacer from 'components/Spacer'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport Stake from './components/Stake'\r\nimport Harvest from './components/Harvest'\r\nimport ProgressCountdown from './components/ProgressCountdown'\r\nimport Stat from './components/Stat'\r\n\r\nconst StyledBoardroom = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst StyledHeader = styled.div`\r\n  justify-content: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-bottom: ${(props) => props.theme.spacing[5]}px;\r\n  width: 960px;\r\n\r\n  > * {\r\n    flex: 1;\r\n    height: 84px;\r\n    margin: 0 ${(props) => props.theme.spacing[2]}px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst StyledCardsWrapper = styled.div`\r\n  display: flex;\r\n  width: 600px;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`\r\n\r\ninterface BoardroomTokenProps {\r\n  type: PegType\r\n}\r\n\r\nconst BoardroomToken: React.FC<BoardroomTokenProps> = ({ type }) => {\r\n  const { account } = useWallet()\r\n  const priceS = usePriceShare()\r\n  const { onRedeem } = useExitBoardroom(type)\r\n  const [balanceOfRaw, balanceOf, canWithdraw, canClaimReward, epoch, totalSupply] = useBoardroomState(type)\r\n  const cashStat = useCashPriceInEstimatedTWAP(type)\r\n  const { prevAllocation, nextAllocation } = useTreasuryAllocationTimes(type)\r\n\r\n  const price = totalSupply ? totalSupply.times(priceS).toNumber().toLocaleString() : null\r\n\r\n  return (\r\n    <>\r\n      <FlexLayout>\r\n        <Heading as=\"h1\" size=\"md\" mb=\"10px\" style={{ textAlign: 'center' }}>\r\n          {type} - Epoch {epoch}\r\n        </Heading>\r\n        {account && (\r\n          <Button disabled={!canWithdraw} onClick={onRedeem}>\r\n            Settle & Withdraw\r\n          </Button>\r\n        )}\r\n      </FlexLayout>\r\n      <StyledHeader>\r\n        <ProgressCountdown base={prevAllocation} deadline={nextAllocation} description=\"Next Epoch\" />\r\n        <Stat icon=\"💵\" title={cashStat ? `$${cashStat.toFixed(3)}` : '-'} description={`${type} Price (TWAP)`} />\r\n        <Stat icon=\"🔒\" title={totalSupply ? totalSupply.toFixed(3) : '-'} description=\"SSO Staked\" />\r\n        <Stat icon=\"💰\" title={price ? `$${price}` : '-'} description=\"Locked Value\" />\r\n      </StyledHeader>\r\n      <StyledBoardroom>\r\n        <StyledCardsWrapper>\r\n          {account ? (\r\n            <>\r\n              <StyledCardWrapper>\r\n                <Harvest canClaimReward={canClaimReward} type={type} />\r\n              </StyledCardWrapper>\r\n              <Spacer />\r\n              <StyledCardWrapper>\r\n                <Stake balanceOf={balanceOf} balanceOfRaw={balanceOfRaw} canWithdraw={canWithdraw} type={type} />\r\n              </StyledCardWrapper>\r\n            </>\r\n          ) : (\r\n            <UnlockButton mt=\"8px\" fullWidth />\r\n          )}\r\n        </StyledCardsWrapper>\r\n        <Spacer />\r\n        <Card>\r\n          <CardBody>\r\n            <Text>\r\n              <b>Heads up:</b> {`Every deposit & withdrawal of SSO will lock up SSO for 6 epochs, and rewards for 3\r\n              epochs. Likewise, every claim of ${type} rewards will lock up SSO for 6 epochs and the next claim of ${type}\r\n              rewards can only be done 3 epochs later.`}\r\n            </Text>\r\n          </CardBody>\r\n        </Card>\r\n      </StyledBoardroom>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BoardroomToken\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport { Heading, ButtonMenu, ButtonMenuItem } from 'uikit'\r\nimport { PegType } from 'config/constants/types'\r\nimport Page from 'components/layout/Page'\r\nimport { Link, Route, useRouteMatch } from 'react-router-dom'\r\nimport BoardroomToken from './BoardroomToken'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nexport const BoardTabButtons = () => {\r\n  const { url, isExact } = useRouteMatch()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={isExact ? 0 : 1} size=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          SDO\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/sbnb`}>\r\n          SBNB\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Boardroom: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n\r\n  return (\r\n    <Page>\r\n      <FlexLayout>\r\n        <Heading as=\"h1\" size=\"lg\" mb=\"20px\" style={{ textAlign: 'center' }}>\r\n          💱 Boardroom\r\n        </Heading>\r\n        <BoardTabButtons />\r\n      </FlexLayout>\r\n      <Route exact path={`${path}`}>\r\n        <BoardroomToken type={PegType.SDO} />\r\n      </Route>\r\n      <Route exact path={`${path}/sbnb`}>\r\n        <Heading size=\"lg\">The Boardroom is opening next week, more news to come.</Heading>\r\n      </Route>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Boardroom\r\n","export { default } from './Boardroom';\r\n"],"sourceRoot":""}