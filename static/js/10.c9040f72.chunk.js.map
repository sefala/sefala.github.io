{"version":3,"sources":["components/layout/Flex.tsx","hooks/useHarvestFromBoardroom.ts","components/Value/Value.tsx","components/Label/Label.tsx","hooks/useStake.ts","views/Farms/components/WithdrawModal.tsx","views/Boardroom/components/Harvest.tsx","views/Boardroom/components/ProgressCountdown.tsx","views/Boardroom/components/Stat.tsx","views/Boardroom/components/Stake.tsx","views/Boardroom/Boardroom.tsx"],"names":["FlexLayout","styled","div","useBoardroomState","account","useWallet","useState","balance","setBalance","contract","getBoardroom","useEffect","a","calls","address","name","params","multicall","boardRoom","balanceOf","canWithdraw","canClaimReward","epoch","totalSupply","BigNumber","pow","toNumber","fetchAll","useEarningsOnBoardroom","useBoardroom","fetchBalance","useCallback","methods","earned","call","b","catch","err","console","error","stack","refreshBalance","setInterval","clearInterval","zero","useSupplyState","sdo","getTokenAddress","QuoteToken","SDO","sso","SSO","sbo","SBO","erc20ABI","totalSdo","totalSso","totalSbo","fetchTotals","useHarvestFromBoardroom","onReward","claimReward","send","from","txHash","StyledValue","props","theme","colors","primary","Value","value","decimals","fontSize","start","updateStart","end","updateEnd","style","undefined","duration","separator","StyledLabel","isFinished","Label","text","useStake","contractPid","type","dispatch","useDispatch","masterChefContract","useMasterchef","onStake","amount","stake","fetchFarmUserDataAsync","useStakeToBoardroom","stakeBoardroom","useWithdrawFromBoardroom","onWithdraw","unstakeBoardroom","WithdrawModal","onConfirm","onDismiss","max","tokenName","val","setVal","pendingTx","setPendingTx","TranslateString","useI18n","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","onSelectMax","onChange","symbol","variant","onClick","disabled","StyledCardHeader","StyledCardActions","spacing","StyledCardContentInner","Harvest","earnings","toString","StyledCountdown","p","StyledProgressOuter","contrast","StyledProgress","progress","invertedContrast","StyledDesc","span","ProgressCountdown","base","deadline","description","percentage","Date","now","getTime","date","renderer","countdownProps","days","hours","minutes","seconds","h","String","m","s","padStart","StyledCardTitle","secondary","StyledIcon","StyledTextWrapper","Stat","icon","IconButtonWrapper","Stake","requestedApproval","setRequestedApproval","useApproveBoardroom","onApprove","isApproved","tokenBalance","useTokenBalance","handleApprove","useModal","DepositModal","onPresentDeposit","onPresentWithdraw","toFixed","mr","color","launchTime","StyledBoardroom","StyledHeader","StyledCardsWrapper","StyledCardWrapper","Wrapper","BoardroomHeader","as","size","mb","textAlign","Boardroom","onRedeem","useExitBoardroom","cashStat","useCashPriceInEstimatedTWAP","useTreasuryAllocationTimes","prevAllocation","nextAllocation","prevEpoch","moment","utc","startOf","toDate","nextEpoch","add","Page","Flex","Spacer","UnlockButton","mt","fullWidth","LaunchCountdown"],"mappings":"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","file":"static/js/10.c9040f72.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport multicall from 'utils/multicall'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getBoardroom, getTokenAddress } from 'utils/addressHelpers'\r\nimport boardRoom from 'config/abi/boardRoom.json'\r\nimport { useBoardroom } from './useContract'\r\n\r\nconst useHarvestFromBoardroom = () => {\r\n  const { account } = useWallet()\r\n  const contract = useBoardroom()\r\n\r\n  const handle = useCallback(async () => {\r\n    const txHash = await contract.methods.claimReward().send({ from: account })\r\n    return txHash\r\n  }, [account, contract])\r\n\r\n  return { onReward: handle }\r\n}\r\n\r\nexport const useBoardroomState = () => {\r\n  const { account } = useWallet()\r\n  const [balance, setBalance] = useState([])\r\n  const contract = getBoardroom()\r\n\r\n  useEffect(() => {\r\n    const fetchAll = async () => {\r\n      const calls = [\r\n        {\r\n          address: contract,\r\n          name: 'balanceOf',\r\n          params: [account],\r\n        },\r\n        {\r\n          address: contract,\r\n          name: 'canWithdraw',\r\n          params: [account],\r\n        },\r\n        {\r\n          address: contract,\r\n          name: 'canClaimReward',\r\n          params: [account],\r\n        },\r\n        {\r\n          address: contract,\r\n          name: 'epoch',\r\n          params: [],\r\n        },\r\n        {\r\n          address: contract,\r\n          name: 'totalSupply',\r\n          params: [],\r\n        },\r\n      ]\r\n\r\n      const [balanceOf, canWithdraw, canClaimReward, epoch, totalSupply] = await multicall(boardRoom, calls)\r\n      setBalance([\r\n        new BigNumber(balanceOf).div(new BigNumber(10).pow(18)),\r\n        canWithdraw[0],\r\n        canClaimReward[0],\r\n        new BigNumber(epoch).toNumber(),\r\n        new BigNumber(totalSupply).div(new BigNumber(10).pow(18)),\r\n      ])\r\n    }\r\n\r\n    if (account) {\r\n      fetchAll()\r\n    }\r\n  }, [account, contract])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useEarningsOnBoardroom = () => {\r\n  const { account } = useWallet()\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const contract = useBoardroom()\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const b = await contract.methods.earned(account).call()\r\n    setBalance(new BigNumber(b).div(new BigNumber(10).pow(18)))\r\n  }, [account, contract])\r\n\r\n  useEffect(() => {\r\n    fetchBalance().catch((err) => console.error(err.stack))\r\n\r\n    const refreshBalance = setInterval(fetchBalance, 30000)\r\n    return () => clearInterval(refreshBalance)\r\n  }, [setBalance, fetchBalance])\r\n\r\n  return balance\r\n}\r\n\r\nconst zero = new BigNumber(0)\r\n\r\nexport const useSupplyState = () => {\r\n  const [balance, setBalance] = useState([zero, zero, zero])\r\n  const sdo = getTokenAddress(QuoteToken.SDO)\r\n  const sso = getTokenAddress(QuoteToken.SSO)\r\n  const sbo = getTokenAddress(QuoteToken.SBO)\r\n\r\n  useEffect(() => {\r\n    const fetchTotals = async () => {\r\n      const calls = [\r\n        {\r\n          address: sdo,\r\n          name: 'totalSupply',\r\n          params: [],\r\n        },\r\n        {\r\n          address: sso,\r\n          name: 'totalSupply',\r\n          params: [],\r\n        },\r\n        {\r\n          address: sbo,\r\n          name: 'totalSupply',\r\n          params: [],\r\n        },\r\n      ]\r\n\r\n      const [totalSdo, totalSso, totalSbo] = await multicall(erc20ABI, calls)\r\n      setBalance([\r\n        new BigNumber(totalSdo).div(new BigNumber(10).pow(18)),\r\n        new BigNumber(totalSso).div(new BigNumber(10).pow(18)),\r\n        new BigNumber(totalSbo).div(new BigNumber(10).pow(18)),\r\n      ])\r\n    }\r\n\r\n    fetchTotals()\r\n  }, [sdo, sbo, sso])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useHarvestFromBoardroom\r\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\n\ninterface ValueProps {\n  value: string | number\n  decimals?: number\n  fontSize?: string | number\n}\n\nconst Value: React.FC<ValueProps> = ({ value, decimals, fontSize = '30px' }) => {\n  const [start, updateStart] = useState(0)\n  const [end, updateEnd] = useState(0)\n\n  useEffect(() => {\n    if (typeof value === 'number') {\n      updateStart(end)\n      updateEnd(value)\n    }\n  }, [value])\n\n  return (\n    <StyledValue style={{ fontSize }}>\n      {typeof value === 'string' ? (\n        value\n      ) : (\n        <CountUp\n          start={start}\n          end={end}\n          decimals={\n            // eslint-disable-next-line no-nested-ternary\n            decimals !== undefined ? decimals : end < 0 ? 4 : end > 1e5 ? 0 : 3\n          }\n          duration={1}\n          separator=\",\"\n        />\n      )}\n    </StyledValue>\n  )\n}\n\nconst StyledValue = styled.div`\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 30px;\n  font-weight: 900;\n`\n\nexport default Value\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { Farm } from 'state/types'\nimport { stake, restake, stakeBoardroom, unstakeBoardroom } from 'utils/callHelpers'\nimport { useBoardroom, useMasterchef } from './useContract'\nimport { fetchFarmUserDataAsync } from '../state/farms'\n\nexport const useStake = ({ contractPid, type }: Farm) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      await stake(masterChefContract, contractPid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n    },\n    [account, dispatch, masterChefContract, contractPid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useStakeToBoardroom = () => {\n  const { account } = useWallet()\n  const contract = useBoardroom()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      await stakeBoardroom(contract, amount, account)\n    },\n    [account, contract],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useWithdrawFromBoardroom = () => {\n  const { account } = useWallet()\n  const contract = useBoardroom()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      await unstakeBoardroom(contract, amount, account)\n    },\n    [account, contract],\n  )\n\n  return { onWithdraw: handleStake }\n}\n\nexport const useReStake = ({ contractPid, type }: Farm) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleStake = useCallback(async () => {\n    const txHash = await restake(masterChefContract, contractPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    console.info(txHash)\n  }, [account, dispatch, masterChefContract, contractPid])\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import useHarvestFromBoardroom, { useEarningsOnBoardroom } from 'hooks/useHarvestFromBoardroom'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Card, CardBody } from 'uikit'\r\nimport Value from 'components/Value'\r\nimport Label from 'components/Label'\r\n\r\nconst Harvest: React.FC<any> = ({ canClaimReward }) => {\r\n  const { onReward } = useHarvestFromBoardroom()\r\n  const earnings = useEarningsOnBoardroom()\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <StyledCardContentInner>\r\n          <StyledCardHeader>\r\n            <Value value={earnings.toString()} />\r\n            <Label text=\"SDO Earned\" />\r\n          </StyledCardHeader>\r\n          <StyledCardActions>\r\n            <Button onClick={onReward} disabled={!canClaimReward}>\r\n              Claim Reward\r\n            </Button>\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[6]}px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default Harvest\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Countdown, { CountdownRenderProps } from 'react-countdown';\r\nimport { Card } from 'uikit';\r\n\r\ninterface ProgressCountdownProps {\r\n  base: Date;\r\n  deadline: Date;\r\n  description: string;\r\n}\r\n\r\nconst ProgressCountdown: React.FC<ProgressCountdownProps> = ({\r\n  base,\r\n  deadline,\r\n  description,\r\n}) => {\r\n  const percentage =\r\n    Date.now() >= deadline.getTime()\r\n      ? 100\r\n      : ((Date.now() - base.getTime()) / (deadline.getTime() - base.getTime())) * 100;\r\n\r\n  const countdownRenderer = (countdownProps: CountdownRenderProps) => {\r\n    const { days, hours, minutes, seconds } = countdownProps;\r\n    const h = String(days * 24 + hours);\r\n    const m = String(minutes);\r\n    const s = String(seconds);\r\n    return (\r\n      <StyledCountdown>\r\n        {h.padStart(2, '0')}:{m.padStart(2, '0')}:{s.padStart(2, '0')}\r\n      </StyledCountdown>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <Card>\r\n      <StyledCardContentInner>\r\n        <StyledDesc>{description}</StyledDesc>\r\n        <Countdown date={deadline} renderer={countdownRenderer} />\r\n        <StyledProgressOuter>\r\n          <StyledProgress progress={percentage} />\r\n        </StyledProgressOuter>\r\n      </StyledCardContentInner>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst StyledCountdown = styled.p`\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  margin: 0 0 6px 0;\r\n`;\r\n\r\nconst StyledProgressOuter = styled.div`\r\n  width: 100%;\r\n  height: 8px;\r\n  border-radius: 3px;\r\n  background: ${(props) => props.theme.colors.contrast};\r\n`;\r\n\r\nconst StyledProgress = styled.div<{ progress: number }>`\r\n  width: ${(props) => props.progress}%;\r\n  height: 100%;\r\n  border-radius: 3px;\r\n  background: ${(props) => props.theme.colors.invertedContrast};\r\n`;\r\n\r\nconst StyledDesc = styled.span`\r\n  font-weight: 700;\r\n  font-size: 12px;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: ${(props) => props.theme.spacing[2]}px ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nexport default ProgressCountdown;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card } from 'uikit'\r\n\r\ninterface StatProps {\r\n  icon: string\r\n  title: string\r\n  description: string\r\n}\r\n\r\nconst Stat: React.FC<StatProps> = ({ icon, title, description }) => {\r\n  return (\r\n    <Card>\r\n      <StyledCardContentInner>\r\n        <StyledIcon>{icon}</StyledIcon>\r\n        <StyledTextWrapper>\r\n          <StyledCardTitle>{title}</StyledCardTitle>\r\n          <StyledDesc>{description}</StyledDesc>\r\n        </StyledTextWrapper>\r\n      </StyledCardContentInner>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst StyledCardTitle = styled.div`\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n`\r\n\r\nconst StyledDesc = styled.span`\r\n  color: ${(props) => props.theme.colors.secondary};\r\n`\r\n\r\nconst StyledIcon = styled.span`\r\n  font-size: 28px;\r\n  margin-right: 10px;\r\n`\r\n\r\nconst StyledTextWrapper = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  padding: ${(props) => props.theme.spacing[2]}px ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nexport default Stat\r\n","import React, { useCallback, useState } from 'react'\r\nimport { useApproveBoardroom } from 'hooks/useApprove'\r\nimport styled from 'styled-components'\r\nimport DepositModal from 'views/Farms/components/DepositModal'\r\nimport WithdrawModal from 'views/Farms/components/WithdrawModal'\r\nimport { AddIcon, Button, Card, CardBody, IconButton, MinusIcon, useModal } from 'uikit'\r\nimport Value from 'components/Value'\r\nimport Label from 'components/Label'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { useStakeToBoardroom, useWithdrawFromBoardroom } from 'hooks/useStake'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst Stake: React.FC<any> = ({ canWithdraw, balanceOf }) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { onApprove, isApproved } = useApproveBoardroom()\r\n  const tokenBalance = useTokenBalance(QuoteToken.SSO)\r\n  const { onStake } = useStakeToBoardroom()\r\n  const { onWithdraw } = useWithdrawFromBoardroom()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const [onPresentDeposit] = useModal(<DepositModal max={tokenBalance} onConfirm={onStake} tokenName=\"SSO\" />)\r\n  const [onPresentWithdraw] = useModal(<WithdrawModal max={balanceOf} onConfirm={onWithdraw} tokenName=\"SSO\" />)\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <StyledCardContentInner>\r\n          <StyledCardHeader>\r\n            <Value value={balanceOf?.toFixed(4)} />\r\n            <Label text=\"SSO Staked\" />\r\n          </StyledCardHeader>\r\n          <StyledCardActions>\r\n            {!isApproved ? (\r\n              <Button disabled={requestedApproval} onClick={handleApprove}>\r\n                Approve SSO\r\n              </Button>\r\n            ) : (\r\n              <IconButtonWrapper>\r\n                <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\" disabled={!canWithdraw}>\r\n                  <MinusIcon color=\"primary\" />\r\n                </IconButton>\r\n                <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\r\n                  <AddIcon color=\"primary\" />\r\n                </IconButton>\r\n              </IconButtonWrapper>\r\n            )}\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[6]}px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default Stake\r\n","import React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport Spacer from 'components/Spacer'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport LaunchCountdown from 'components/LaunchCountdown'\r\nimport moment from 'moment'\r\nimport useExitBoardroom, { useCashPriceInEstimatedTWAP, useTreasuryAllocationTimes } from 'hooks/useExitBoardroom'\r\nimport { Heading, Button } from 'uikit'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport Page from 'components/layout/Page'\r\nimport { useBoardroomState } from 'hooks/useHarvestFromBoardroom'\r\nimport Harvest from './components/Harvest'\r\nimport ProgressCountdown from './components/ProgressCountdown'\r\nimport Stat from './components/Stat'\r\nimport Stake from './components/Stake'\r\n\r\nconst launchTime = new Date(1616730082000)\r\nconst nextEpochTime = 8 // TODO: Load from contract\r\nconst nextEpochFrame = process.env.REACT_APP_CHAIN_ID === '97' ? 'minutes' : 'hours'\r\n\r\nconst StyledBoardroom = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst StyledHeader = styled.div`\r\n  justify-content: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-bottom: ${(props) => props.theme.spacing[5]}px;\r\n  width: 960px;\r\n\r\n  > * {\r\n    flex: 1;\r\n    height: 84px;\r\n    margin: 0 ${(props) => props.theme.spacing[2]}px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst StyledCardsWrapper = styled.div`\r\n  display: flex;\r\n  width: 600px;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst BoardroomHeader = () => {\r\n  return (\r\n    <Heading as=\"h1\" size=\"lg\" mb=\"50px\" style={{ textAlign: 'center' }}>\r\n      💱 Boardroom\r\n    </Heading>\r\n  )\r\n}\r\n\r\nconst Boardroom: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const { onRedeem } = useExitBoardroom()\r\n  const [balanceOf, canWithdraw, canClaimReward, epoch, totalSupply] = useBoardroomState()\r\n\r\n  const cashStat = useCashPriceInEstimatedTWAP()\r\n  const { prevAllocation, nextAllocation } = useTreasuryAllocationTimes()\r\n\r\n  const prevEpoch = useMemo(\r\n    () => (nextAllocation.getTime() <= Date.now() ? moment().utc().startOf('day').toDate() : prevAllocation),\r\n    [prevAllocation, nextAllocation],\r\n  )\r\n  const nextEpoch = useMemo(() => moment(prevEpoch).add(nextEpochTime, nextEpochFrame).toDate(), [prevEpoch])\r\n\r\n  const isLaunched = Date.now() >= launchTime.getTime()\r\n\r\n  if (!isLaunched) {\r\n    return (\r\n      <Page>\r\n        <BoardroomHeader />\r\n        <Wrapper>\r\n          <LaunchCountdown deadline={launchTime} />\r\n        </Wrapper>\r\n      </Page>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <FlexLayout>\r\n        <BoardroomHeader />\r\n        {account && (\r\n          <Button disabled={!canWithdraw} onClick={onRedeem}>\r\n            Settle & Withdraw\r\n          </Button>\r\n        )}\r\n      </FlexLayout>\r\n      <StyledHeader>\r\n        <Stat icon=\"⌛\" title={epoch} description=\"Epoch\" />\r\n        <ProgressCountdown base={prevEpoch} deadline={nextEpoch} description=\"Next Epoch\" />\r\n        <Stat icon=\"💵\" title={cashStat ? `$${cashStat.toFixed(3)}` : '-'} description=\"SDO Price (TWAP)\" />\r\n        <Stat icon=\"💰\" title={totalSupply ? `$${totalSupply.toFixed(3)}` : '-'} description=\"Treasury Amount\" />\r\n      </StyledHeader>\r\n      <StyledBoardroom>\r\n        <StyledCardsWrapper>\r\n          {account ? (\r\n            <>\r\n              <StyledCardWrapper>\r\n                <Harvest canClaimReward={canClaimReward} />\r\n              </StyledCardWrapper>\r\n              <Spacer />\r\n              <StyledCardWrapper>\r\n                <Stake balanceOf={balanceOf} canWithdraw={canWithdraw} />\r\n              </StyledCardWrapper>\r\n            </>\r\n          ) : (\r\n            <UnlockButton mt=\"8px\" fullWidth />\r\n          )}\r\n        </StyledCardsWrapper>\r\n      </StyledBoardroom>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Boardroom\r\n"],"sourceRoot":""}