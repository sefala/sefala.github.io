{"version":3,"sources":["components/Value/Value.tsx","components/Label/Label.tsx","views/Home/components/CardValue.tsx","views/Home/components/CakeStats.tsx","views/Home/Home.tsx","hooks/useTokenBalance.ts","components/UnlockButton.tsx","hooks/useExitBoardroom.ts","views/Farms/components/WithdrawModal.tsx","views/Boardroom/components/Stake.tsx","views/Boardroom/components/Harvest.tsx","views/Boardroom/components/ProgressCountdown.tsx","views/Boardroom/components/Stat.tsx","views/Boardroom/BoardroomToken.tsx","views/Boardroom/Boardroom.tsx","views/Bonds/components/ExchangeCard.tsx","views/Bonds/components/ExchangeStat.tsx","views/Bonds/BondToken.tsx","views/Bonds/Bond.tsx"],"names":["StyledValue","styled","div","props","theme","colors","primary","Value","value","decimals","prefix","fontSize","useState","start","updateStart","end","updateEnd","useEffect","style","undefined","duration","separator","StyledLabel","isFinished","Label","text","CardValue","useCountUp","countUp","update","updateValue","useRef","current","color","bold","CakeStats","totalValue","useTotalValue","flexDirection","alignContent","justifyContent","size","mb","toNumber","CardLogo","CardBody","token","StyledCardHeader","CenterHeading","Heading","Logo","Home","prices","usePrices","useSupplyState","totalSdo","totalSso","totalSbnb","sdoAddress","contracts","QuoteToken","SDO","CHAIN_ID","ssoAddress","SSO","sbnbAddress","SBNB","Page","Flex","Spacer","small","href","mr","useTokenBalanceInAddress","address","BigNumber","balance","setBalance","ethereum","useWallet","fastRefresh","useRefresh","a","tokenAddress","getTokenAddress","getTokenBalance","res","fetchBalance","useTokenBalance","account","UnlockButton","TranslateString","useI18n","connect","reset","onPresentConnectModal","useWalletModal","onClick","oneUnit","pow","useCashPriceInEstimatedTWAP","type","stat","setStat","contract","useTreasury","slowRefresh","methods","getDollarPrice","call","then","x","useBnbPriceTWAP","useIfo","getBnbPrice","useTreasuryAllocationTimes","prevAllocation","Date","nextAllocation","nextEpochLength","time","setTime","getTreasury","calls","name","params","multicall","treasury","nextEpochPoint","lastEpochTimestamp","multipliedBy","fetchAllocations","useBondStats","data","setData","getBurnableDollarLeft","getRedeemableBonds","useExitBoardroom","useBoardroom","onRedeem","useCallback","exit","send","from","txHash","WithdrawModal","onConfirm","onDismiss","max","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","onSelectMax","onChange","symbol","variant","disabled","IconButtonWrapper","Divider","borderColor","launchTime","StyledCardActions","spacing","StyledCardContentInner","Stake","canWithdraw","balanceOf","balanceOfRaw","requestedApproval","setRequestedApproval","useApproveBoardroom","onApprove","isApproved","tokenBalance","onStake","useStakeToBoardroom","onWithdraw","useWithdrawFromBoardroom","handleApprove","console","error","useModal","DepositModal","onPresentDeposit","onPresentWithdraw","isLaunched","now","getTime","toFixed","date","renderer","countdownProps","days","hours","minutes","seconds","paddedSeconds","paddedMinutes","paddedHours","paddedDays","pr","Harvest","canClaimReward","onReward","useHarvestFromBoardroom","earnings","useEarningsOnBoardroom","toString","toLocaleLowerCase","StyledCountdown","p","StyledProgressOuter","contrast","StyledProgress","progress","invertedContrast","StyledDesc","span","ProgressCountdown","base","deadline","description","percentage","h","String","m","s","padStart","StyledCardTitle","secondary","StyledIcon","StyledTextWrapper","Stat","icon","StyledBoardroom","StyledHeader","StyledCardsWrapper","StyledCardWrapper","BoardroomToken","priceS","usePriceShare","useBoardroomState","epoch","totalSupply","cashStat","price","times","toLocaleString","as","textAlign","mt","fullWidth","Wrapper","BoardTabButtons","useRouteMatch","url","isExact","activeIndex","Link","to","Boardroom","path","exact","PegType","tertiary","ExchangeCard","action","fromToken","toToken","priceDesc","onExchange","disabledDescription","useApproveTreasury","ExchangeStat","label","BOND_REDEEM_PRICE_BN","dividedBy","StyledBond","BondToken","bondBalance","SBO","burnable","redeemable","handleBuyBonds","amount","amountBig","priceBig","buyBonds","handleRedeemBonds","redeemBonds","isBondRedeemable","gt","Number","isBondPurchasable","Math","floor","getDisplayBalance","Bond"],"mappings":"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","file":"static/js/11.cc27bc2b.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\n\ninterface ValueProps {\n  value: string | number\n  decimals?: number\n  prefix?: string\n  fontSize?: string | number\n}\n\nconst Value: React.FC<ValueProps> = ({ value, decimals, prefix= '', fontSize = '30px' }) => {\n  const [start, updateStart] = useState(0)\n  const [end, updateEnd] = useState(0)\n\n  useEffect(() => {\n    if (typeof value === 'number') {\n      updateStart(end)\n      updateEnd(value)\n    }\n  }, [value])\n\n  return (\n    <StyledValue style={{ fontSize }}>\n      {typeof value === 'string' ? (\n        value\n      ) : (\n        <CountUp\n          start={start}\n          end={end}\n          decimals={\n            // eslint-disable-next-line no-nested-ternary\n            decimals !== undefined ? decimals : end < 0 ? 4 : end > 1e5 ? 0 : 3\n          }\n          duration={1}\n          separator=\",\"\n          prefix={prefix}\n        />\n      )}\n    </StyledValue>\n  )\n}\n\nconst StyledValue = styled.div`\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 30px;\n  font-weight: 900;\n`\n\nexport default Value\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from 'uikit'\n\ninterface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  prefix?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px', prefix }) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text color=\"textSubtle\" bold fontSize={fontSize}>\n      {prefix}{countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import React from 'react'\nimport { Heading, Flex } from 'uikit'\nimport CardValue from './CardValue'\nimport { useTotalValue } from '../../../state/hooks'\n\nconst CakeStats = () => {\n  const totalValue = useTotalValue()\n\n  return (\n    <Flex flexDirection=\"column\" alignContent=\"center\" justifyContent=\"center\">\n      <Heading size=\"lg\" mb=\"24px\">\n        Total Value Locked (TVL)\n      </Heading>\n      <CardValue value={totalValue.toNumber()} prefix=\"$\" decimals={2} />\n    </Flex>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Heading, LinkExternal } from 'uikit'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useSupplyState } from 'hooks/useHarvestFromBoardroom'\nimport { usePrices } from 'state/hooks'\nimport Value from 'components/Value'\nimport Spacer from 'components/Spacer'\nimport Label from 'components/Label'\nimport { QuoteToken } from 'config/constants/types'\nimport contracts from 'config/constants/contracts'\nimport CakeStats from './components/CakeStats'\n\nexport const CardLogo = styled(CardBody)<{ token: string }>`\n  background-image: url('/images/tokens/${({ token }) => token}.png');\n  background-repeat: no-repeat;\n  background-position: center 10px;\n  background-size: 100px 100px;\n  padding-top: 120px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n`\n\nconst CenterHeading = styled(Heading)`\n  text-align: center;\n`\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst Logo = styled.div`\n  background-image: url('/images/supra.png');\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  height: 80px;\n  width: 400px;\n`\n\nconst Home: React.FC = () => {\n  const prices = usePrices()\n  const [totalSdo, totalSso, totalSbnb] = useSupplyState()\n  const sdoAddress = contracts[QuoteToken.SDO][CHAIN_ID]\n  const ssoAddress = contracts[QuoteToken.SSO][CHAIN_ID]\n  const sbnbAddress = contracts[QuoteToken.SBNB][CHAIN_ID]\n\n  return (\n    <Page>\n      <FlexLayout>\n        <Logo />\n        <Spacer />\n        <CakeStats />\n      </FlexLayout>\n      <FlexLayout>\n        <Card>\n          <CardLogo token=\"sdo\">\n            <CenterHeading>Supra Dollar</CenterHeading>\n            <StyledCardHeader>\n              <Value value={totalSdo.toNumber()} decimals={0} />\n              <Label text=\"Circulating Supply\" />\n            </StyledCardHeader>\n            <StyledCardHeader>\n              <Value value={prices.SDO?.toNumber()} prefix=\"$\" />\n              <Label text=\"Price\" />\n            </StyledCardHeader>\n            <StyledCardHeader>\n              <LinkExternal small href={`https://dex.slime.finance/#/swap?outputCurrency=${sdoAddress}`} mr=\"16px\">\n                Buy SDO\n              </LinkExternal>\n            </StyledCardHeader>\n          </CardLogo>\n        </Card>\n        <Card>\n          <CardLogo token=\"sso\">\n            <CenterHeading>Supra Dollar Share</CenterHeading>\n            <StyledCardHeader>\n              <Value value={totalSso.toNumber()} decimals={0} />\n              <Label text=\"Total Supply\" />\n            </StyledCardHeader>\n            <StyledCardHeader>\n              <Value value={prices.SSO?.toNumber()} prefix=\"$\" />\n              <Label text=\"Price\" />\n            </StyledCardHeader>\n            <StyledCardHeader>\n              <LinkExternal small href={`https://dex.slime.finance/#/swap?outputCurrency=${ssoAddress}`} mr=\"16px\">\n                Buy SSO\n              </LinkExternal>\n            </StyledCardHeader>\n          </CardLogo>\n        </Card>\n        <Card>\n          <CardLogo token=\"sbnb\">\n            <CenterHeading>Supra BNB</CenterHeading>\n            <StyledCardHeader>\n              <Value value={totalSbnb.toNumber()} decimals={0} />\n              <Label text=\"Circulating Supply\" />\n            </StyledCardHeader>\n            <StyledCardHeader>\n              <Value value={0} prefix=\"$\" />\n              <Label text=\"Price\" />\n            </StyledCardHeader>\n            <StyledCardHeader>\n              <LinkExternal small href={`https://dex.slime.finance/#/swap?outputCurrency=${sbnbAddress}`} mr=\"16px\">\n                Buy SBNB\n              </LinkExternal>\n            </StyledCardHeader>\n          </CardLogo>\n        </Card>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nexport default Home\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { QuoteToken } from 'config/constants/types'\nimport { getTokenAddress } from 'utils/addressHelpers'\nimport { provider } from 'web3-core'\nimport { getTokenBalance } from 'utils/erc20'\nimport useRefresh from './useRefresh'\nimport { useToken } from './useContract'\n\nconst useTokenBalance = (token: QuoteToken) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n  const tokenAddress = getTokenAddress(token)\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTokenBalanceInAddress = (token: QuoteToken, address: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { ethereum }: { ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const tokenAddress = getTokenAddress(token)\n      const res = await getTokenBalance(ethereum, tokenAddress, address)\n      setBalance(new BigNumber(res))\n    }\n\n    if (address && ethereum) {\n      fetchBalance()\n    }\n  }, [address, ethereum, token, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = (token: QuoteToken) => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n  const contract = useToken(token)\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const supply = await contract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh, contract])\n\n  return totalSupply\n}\n\nexport default useTokenBalance\n","import React from 'react'\nimport { Button, useWalletModal } from 'uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { useCallback, useEffect, useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { TreasuryAllocationTime } from 'utils'\r\nimport { getTreasury } from 'utils/addressHelpers'\r\nimport multicall from 'utils/multicall'\r\nimport treasury from 'config/abi/treasury.json'\r\nimport BigNumber from 'bignumber.js'\r\nimport { PegType } from 'config/constants/types'\r\nimport { useBoardroom, useIfo, useTreasury } from './useContract'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useExitBoardroom = (type: PegType) => {\r\n  const { account } = useWallet()\r\n  const contract = useBoardroom(type)\r\n\r\n  const handleExit = useCallback(async () => {\r\n    const txHash = await contract.methods.exit().send({ from: account })\r\n    return txHash\r\n  }, [account, contract])\r\n\r\n  return { onRedeem: handleExit }\r\n}\r\n\r\nconst oneUnit = new BigNumber(10).pow(18)\r\n\r\nexport const useCashPriceInEstimatedTWAP = (type: PegType) => {\r\n  const [stat, setStat] = useState(new BigNumber(10).div(oneUnit))\r\n  const contract = useTreasury(type)\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    contract.methods\r\n      .getDollarPrice()\r\n      .call()\r\n      .then((x) => setStat(new BigNumber(x).div(oneUnit)))\r\n  }, [contract, slowRefresh])\r\n\r\n  return stat\r\n}\r\n\r\nexport const useBnbPriceTWAP = () => {\r\n  const [stat, setStat] = useState(new BigNumber(10).div(oneUnit))\r\n  const contract = useIfo()\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    contract.methods\r\n      .getBnbPrice()\r\n      .call()\r\n      .then((x) => setStat(new BigNumber(x).div(oneUnit)))\r\n  }, [contract, slowRefresh])\r\n\r\n  return stat\r\n}\r\n\r\nexport const useTreasuryAllocationTimes = (type: PegType) => {\r\n  const [time, setTime] = useState<TreasuryAllocationTime>({\r\n    prevAllocation: new Date(),\r\n    nextAllocation: new Date(),\r\n    nextEpochLength: 0,\r\n  })\r\n  const contract = getTreasury(type)\r\n\r\n  useEffect(() => {\r\n    const fetchAllocations = async () => {\r\n      const calls = [\r\n        {\r\n          address: contract,\r\n          name: 'nextEpochPoint',\r\n          params: [],\r\n        },\r\n        {\r\n          address: contract,\r\n          name: 'lastEpochTime',\r\n          params: [],\r\n        },\r\n        {\r\n          address: contract,\r\n          name: 'nextEpochLength',\r\n          params: [],\r\n        },\r\n      ]\r\n\r\n      const [nextEpochPoint, lastEpochTimestamp, nextEpochLength] = await multicall((treasury as unknown) as any, calls)\r\n      setTime({\r\n        nextAllocation: new Date(new BigNumber(nextEpochPoint).multipliedBy(1000).toNumber()),\r\n        prevAllocation: new Date(new BigNumber(lastEpochTimestamp).multipliedBy(1000).toNumber()),\r\n        nextEpochLength: new BigNumber(nextEpochLength).toNumber(),\r\n      })\r\n    }\r\n\r\n    if (contract) fetchAllocations()\r\n  }, [contract])\r\n  return time\r\n}\r\n\r\nexport const useBondStats = (type: PegType) => {\r\n  const [data, setData] = useState([new BigNumber(0), new BigNumber(0)])\r\n  const contract = getTreasury(type)\r\n\r\n  useEffect(() => {\r\n    const fetchAllocations = async () => {\r\n      const calls = [\r\n        {\r\n          address: contract,\r\n          name: 'getBurnableDollarLeft',\r\n          params: [],\r\n        },\r\n        {\r\n          address: contract,\r\n          name: 'getRedeemableBonds',\r\n          params: [],\r\n        },\r\n      ]\r\n\r\n      const [getBurnableDollarLeft, getRedeemableBonds] = await multicall((treasury as unknown) as any, calls)\r\n      setData([new BigNumber(getBurnableDollarLeft).div(oneUnit), new BigNumber(getRedeemableBonds).div(oneUnit)])\r\n    }\r\n\r\n    if (contract) fetchAllocations()\r\n  }, [contract])\r\n  return data\r\n}\r\n\r\nexport default useExitBoardroom\r\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React, { useCallback, useState } from 'react'\r\nimport { useApproveBoardroom } from 'hooks/useApprove'\r\nimport styled from 'styled-components'\r\nimport DepositModal from 'views/Farms/components/DepositModal'\r\nimport WithdrawModal from 'views/Farms/components/WithdrawModal'\r\nimport { AddIcon, Button, Card, IconButton, MinusIcon, useModal, Text } from 'uikit'\r\nimport Value from 'components/Value'\r\nimport Label from 'components/Label'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { useStakeToBoardroom, useWithdrawFromBoardroom } from 'hooks/useStake'\r\nimport { CardLogo } from 'views/Home/Home'\r\nimport Countdown, { CountdownRenderProps } from 'react-countdown'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  height: 1px;\r\n  margin: 19px auto;\r\n  width: 100%;\r\n`\r\nconst launchTime = new Date(1618142400000)\r\n\r\nconst Stake: React.FC<any> = ({ canWithdraw, balanceOf, balanceOfRaw, type }) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { onApprove, isApproved } = useApproveBoardroom(type)\r\n  const tokenBalance = useTokenBalance(QuoteToken.SSO)\r\n  const { onStake } = useStakeToBoardroom(type)\r\n  const { onWithdraw } = useWithdrawFromBoardroom(type)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const [onPresentDeposit] = useModal(<DepositModal max={tokenBalance} onConfirm={onStake} tokenName=\"SSO\" />)\r\n  const [onPresentWithdraw] = useModal(<WithdrawModal max={balanceOfRaw} onConfirm={onWithdraw} tokenName=\"SSO\" />)\r\n\r\n  const isLaunched = Date.now() >= launchTime.getTime()\r\n\r\n  const renderer = (countdownProps: CountdownRenderProps) => {\r\n    const { days, hours, minutes, seconds } = countdownProps\r\n    const paddedSeconds = seconds < 10 ? `0${seconds}` : seconds\r\n    const paddedMinutes = minutes < 10 ? `0${minutes}` : minutes\r\n    const paddedHours = hours < 10 ? `0${hours}` : hours\r\n    const paddedDays = days > 0 ? `${days} days and ` : ''\r\n\r\n    return (\r\n      <>\r\n        <Text pr=\"3px\">\r\n          Boardroom starts: {paddedDays}\r\n          {paddedHours}:{paddedMinutes}:{paddedSeconds}\r\n        </Text>\r\n        <Divider />\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardLogo token=\"sso\">\r\n        <StyledCardContentInner>\r\n          <StyledCardHeader>\r\n            <Value value={balanceOf?.toFixed(4)} />\r\n            <Label text=\"SSO Staked\" />\r\n          </StyledCardHeader>\r\n          <StyledCardActions>\r\n            {!isLaunched && (\r\n              <div>\r\n                <Countdown date={launchTime} renderer={renderer} />\r\n              </div>\r\n            )}\r\n            {!isApproved ? (\r\n              <Button disabled={requestedApproval} onClick={handleApprove}>\r\n                Approve SSO\r\n              </Button>\r\n            ) : (\r\n              <IconButtonWrapper>\r\n                <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\" disabled={!canWithdraw}>\r\n                  <MinusIcon color=\"primary\" />\r\n                </IconButton>\r\n                <IconButton variant=\"tertiary\" onClick={onPresentDeposit} disabled={!isLaunched}>\r\n                  <AddIcon color=\"primary\" />\r\n                </IconButton>\r\n              </IconButtonWrapper>\r\n            )}\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardLogo>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[6]}px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default Stake\r\n","import useHarvestFromBoardroom, { useEarningsOnBoardroom } from 'hooks/useHarvestFromBoardroom'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Card } from 'uikit'\r\nimport Value from 'components/Value'\r\nimport Label from 'components/Label'\r\nimport { CardLogo } from 'views/Home/Home'\r\n\r\nconst Harvest: React.FC<any> = ({ canClaimReward, type }) => {\r\n  const { onReward } = useHarvestFromBoardroom(type)\r\n  const earnings = useEarningsOnBoardroom(type)\r\n\r\n  return (\r\n    <Card>\r\n      <CardLogo token={`${type.toString().toLocaleLowerCase()}`}>\r\n        <StyledCardContentInner>\r\n          <StyledCardHeader>\r\n            <Value value={earnings.toFixed(4)} />\r\n            <Label text={`${type} Earned`} />\r\n          </StyledCardHeader>\r\n          <StyledCardActions>\r\n            <Button onClick={onReward} disabled={!canClaimReward}>\r\n              Claim Reward\r\n            </Button>\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardLogo>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[6]}px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default Harvest\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Countdown, { CountdownRenderProps } from 'react-countdown';\r\nimport { Card } from 'uikit';\r\n\r\ninterface ProgressCountdownProps {\r\n  base: Date;\r\n  deadline: Date;\r\n  description: string;\r\n}\r\n\r\nconst ProgressCountdown: React.FC<ProgressCountdownProps> = ({\r\n  base,\r\n  deadline,\r\n  description,\r\n}) => {\r\n  const percentage =\r\n    Date.now() >= deadline.getTime()\r\n      ? 100\r\n      : ((Date.now() - base.getTime()) / (deadline.getTime() - base.getTime())) * 100;\r\n\r\n  const countdownRenderer = (countdownProps: CountdownRenderProps) => {\r\n    const { days, hours, minutes, seconds } = countdownProps;\r\n    const h = String(days * 24 + hours);\r\n    const m = String(minutes);\r\n    const s = String(seconds);\r\n    return (\r\n      <StyledCountdown>\r\n        {h.padStart(2, '0')}:{m.padStart(2, '0')}:{s.padStart(2, '0')}\r\n      </StyledCountdown>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <Card>\r\n      <StyledCardContentInner>\r\n        <StyledDesc>{description}</StyledDesc>\r\n        <Countdown date={deadline} renderer={countdownRenderer} />\r\n        <StyledProgressOuter>\r\n          <StyledProgress progress={percentage} />\r\n        </StyledProgressOuter>\r\n      </StyledCardContentInner>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst StyledCountdown = styled.p`\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  margin: 0 0 6px 0;\r\n`;\r\n\r\nconst StyledProgressOuter = styled.div`\r\n  width: 100%;\r\n  height: 8px;\r\n  border-radius: 3px;\r\n  background: ${(props) => props.theme.colors.contrast};\r\n`;\r\n\r\nconst StyledProgress = styled.div<{ progress: number }>`\r\n  width: ${(props) => props.progress}%;\r\n  height: 100%;\r\n  border-radius: 3px;\r\n  background: ${(props) => props.theme.colors.invertedContrast};\r\n`;\r\n\r\nconst StyledDesc = styled.span`\r\n  font-weight: 700;\r\n  font-size: 12px;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: ${(props) => props.theme.spacing[2]}px ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nexport default ProgressCountdown;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card } from 'uikit'\r\n\r\ninterface StatProps {\r\n  icon: string\r\n  title: string\r\n  description: string\r\n}\r\n\r\nconst Stat: React.FC<StatProps> = ({ icon, title, description }) => (\r\n  <Card>\r\n    <StyledCardContentInner>\r\n      <StyledIcon>{icon}</StyledIcon>\r\n      <StyledTextWrapper>\r\n        <StyledCardTitle>{title}</StyledCardTitle>\r\n        <StyledDesc>{description}</StyledDesc>\r\n      </StyledTextWrapper>\r\n    </StyledCardContentInner>\r\n  </Card>\r\n)\r\n\r\nconst StyledCardTitle = styled.div`\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  padding-bottom: 4px;\r\n`\r\n\r\nconst StyledDesc = styled.span`\r\n  font-size: 14px;\r\n  color: ${(props) => props.theme.colors.secondary};\r\n`\r\n\r\nconst StyledIcon = styled.span`\r\n  font-size: 28px;\r\n  margin-right: 10px;\r\n`\r\n\r\nconst StyledTextWrapper = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  padding: ${(props) => props.theme.spacing[2]}px ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nexport default Stat\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useExitBoardroom, { useCashPriceInEstimatedTWAP, useTreasuryAllocationTimes } from 'hooks/useExitBoardroom'\r\nimport { Heading, Button, Text, CardBody, Card } from 'uikit'\r\nimport { useBoardroomState } from 'hooks/useHarvestFromBoardroom'\r\nimport { PegType } from 'config/constants/types'\r\nimport { usePriceShare } from 'state/hooks'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Spacer from 'components/Spacer'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport Stake from './components/Stake'\r\nimport Harvest from './components/Harvest'\r\nimport ProgressCountdown from './components/ProgressCountdown'\r\nimport Stat from './components/Stat'\r\n\r\nconst StyledBoardroom = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst StyledHeader = styled.div`\r\n  justify-content: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-bottom: ${(props) => props.theme.spacing[5]}px;\r\n  width: 960px;\r\n\r\n  > * {\r\n    flex: 1;\r\n    height: 84px;\r\n    margin: 0 ${(props) => props.theme.spacing[2]}px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst StyledCardsWrapper = styled.div`\r\n  display: flex;\r\n  width: 600px;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`\r\n\r\ninterface BoardroomTokenProps {\r\n  type: PegType\r\n}\r\n\r\nconst BoardroomToken: React.FC<BoardroomTokenProps> = ({ type }) => {\r\n  const { account } = useWallet()\r\n  const priceS = usePriceShare()\r\n  const { onRedeem } = useExitBoardroom(type)\r\n  const [balanceOfRaw, balanceOf, canWithdraw, canClaimReward, epoch, totalSupply] = useBoardroomState(type)\r\n  const cashStat = useCashPriceInEstimatedTWAP(type)\r\n  const { prevAllocation, nextAllocation } = useTreasuryAllocationTimes(type)\r\n\r\n  const price = totalSupply ? totalSupply.times(priceS).toNumber().toLocaleString() : null\r\n\r\n  return (\r\n    <>\r\n      <FlexLayout>\r\n        <Heading as=\"h1\" size=\"md\" mb=\"10px\" style={{ textAlign: 'center' }}>\r\n          {type} - Epoch {epoch}\r\n        </Heading>\r\n        {account && (\r\n          <Button disabled={!canWithdraw} onClick={onRedeem}>\r\n            Settle & Withdraw\r\n          </Button>\r\n        )}\r\n      </FlexLayout>\r\n      <StyledHeader>\r\n        <ProgressCountdown base={prevAllocation} deadline={nextAllocation} description=\"Next Epoch\" />\r\n        <Stat icon=\"💵\" title={cashStat ? `$${cashStat.toFixed(3)}` : '-'} description=\"SDO Price (TWAP)\" />\r\n        <Stat icon=\"🔒\" title={totalSupply ? totalSupply.toFixed(3) : '-'} description=\"SSO Staked\" />\r\n        <Stat icon=\"💰\" title={price ? `$${price}` : '-'} description=\"Locked Value\" />\r\n      </StyledHeader>\r\n      <StyledBoardroom>\r\n        <StyledCardsWrapper>\r\n          {account ? (\r\n            <>\r\n              <StyledCardWrapper>\r\n                <Harvest canClaimReward={canClaimReward} type={type} />\r\n              </StyledCardWrapper>\r\n              <Spacer />\r\n              <StyledCardWrapper>\r\n                <Stake balanceOf={balanceOf} balanceOfRaw={balanceOfRaw} canWithdraw={canWithdraw} type={type} />\r\n              </StyledCardWrapper>\r\n            </>\r\n          ) : (\r\n            <UnlockButton mt=\"8px\" fullWidth />\r\n          )}\r\n        </StyledCardsWrapper>\r\n        <Spacer />\r\n        <Card>\r\n          <CardBody>\r\n            <Text>\r\n              <b>Heads up:</b> {`Every deposit & withdrawal of SSO will lock up SSO for 6 epochs, and rewards for 3\r\n              epochs. Likewise, every claim of ${type} rewards will lock up SSO for 6 epochs and the next claim of ${type}\r\n              rewards can only be done 3 epochs later.`}\r\n            </Text>\r\n          </CardBody>\r\n        </Card>\r\n      </StyledBoardroom>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BoardroomToken\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport { Heading, ButtonMenu, ButtonMenuItem } from 'uikit'\r\nimport { PegType } from 'config/constants/types'\r\nimport Page from 'components/layout/Page'\r\nimport { Link, Route, useRouteMatch } from 'react-router-dom'\r\nimport BoardroomToken from './BoardroomToken'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nexport const BoardTabButtons = () => {\r\n  const { url, isExact } = useRouteMatch()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={isExact ? 0 : 1} size=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          SDO\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/sbnb`}>\r\n          SBNB\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Boardroom: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n\r\n  return (\r\n    <Page>\r\n      <FlexLayout>\r\n        <Heading as=\"h1\" size=\"lg\" mb=\"20px\" style={{ textAlign: 'center' }}>\r\n          💱 Boardroom\r\n        </Heading>\r\n        <BoardTabButtons />\r\n      </FlexLayout>\r\n      <Route exact path={`${path}`}>\r\n        <BoardroomToken type={PegType.SDO} />\r\n      </Route>\r\n      <Route exact path={`${path}/sbnb`}>\r\n        <Heading size=\"lg\">Soon...</Heading>\r\n      </Route>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Boardroom\r\n","import React, { useState, useCallback } from 'react'\r\nimport { PegType, QuoteToken } from 'config/constants/types'\r\nimport { useApproveTreasury } from 'hooks/useApprove'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport styled from 'styled-components'\r\nimport { Button, Card, useModal } from 'uikit'\r\nimport DepositModal from 'views/Farms/components/DepositModal'\r\nimport { CardLogo } from 'views/Home/Home'\r\n\r\ninterface ExchangeCardProps {\r\n  action: string\r\n  fromToken: QuoteToken\r\n  toToken: QuoteToken\r\n  priceDesc: string\r\n  onExchange: (amount: string) => void\r\n  disabled?: boolean\r\n  disabledDescription?: string\r\n  type: PegType\r\n}\r\n\r\nconst ExchangeCard: React.FC<ExchangeCardProps> = ({\r\n  action,\r\n  fromToken,\r\n  toToken,\r\n  priceDesc,\r\n  onExchange,\r\n  type,\r\n  disabled = false,\r\n  disabledDescription,\r\n}) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const balance = useTokenBalance(fromToken)\r\n  const { onApprove, isApproved } = useApproveTreasury(fromToken, type)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const [onPresentDeposit] = useModal(<DepositModal max={balance} onConfirm={onExchange} tokenName={fromToken} />)\r\n\r\n  return (\r\n    <Card>\r\n      <CardLogo token={toToken.toLocaleLowerCase()}>\r\n        <StyledCardContentInner>\r\n          <StyledCardTitle>{`${action} ${toToken}`}</StyledCardTitle>\r\n          <StyledDesc>{priceDesc}</StyledDesc>\r\n          <StyledCardActions>\r\n            {!isApproved && !disabled ? (\r\n              <Button disabled={requestedApproval} onClick={handleApprove}>\r\n                {`Approve ${fromToken}`}\r\n              </Button>\r\n            ) : (\r\n              <Button onClick={onPresentDeposit} disabled={disabled}>\r\n                {disabledDescription || action}\r\n              </Button>\r\n            )}\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardLogo>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst StyledCardTitle = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  height: 64px;\r\n  justify-content: center;\r\n  margin-top: ${(props) => -props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledDesc = styled.span`\r\n  color: ${(props) => props.theme.colors.tertiary};\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default ExchangeCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from 'uikit'\r\n\r\ninterface ExchangeStatProps {\r\n  description: string\r\n  label: string\r\n}\r\n\r\nconst ExchangeStat: React.FC<ExchangeStatProps> = ({ description, label }) => {\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <StyledCardContentInner>\r\n          <StyledCardTitle>{label}</StyledCardTitle>\r\n          <StyledDesc>{description}</StyledDesc>\r\n        </StyledCardContentInner>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst StyledCardTitle = styled.div`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\r\n`\r\n\r\nconst StyledDesc = styled.span`\r\n  color: ${(props) => props.theme.colors.secondary};\r\n  text-align: center;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: ${(props) => props.theme.spacing[2]}px;\r\n`\r\n\r\nexport default ExchangeStat\r\n","import React, { useCallback, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport Spacer from 'components/Spacer'\r\nimport { useBondStats, useCashPriceInEstimatedTWAP } from 'hooks/useExitBoardroom'\r\nimport { getDisplayBalance } from 'utils/formatBalance'\r\nimport { useTreasury } from 'hooks/useContract'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { PegType, QuoteToken } from 'config/constants/types'\r\nimport ExchangeCard from './components/ExchangeCard'\r\nimport ExchangeStat from './components/ExchangeStat'\r\n\r\nconst BOND_REDEEM_PRICE_BN = new BigNumber(10).pow(18).multipliedBy(101).dividedBy(100)\r\n\r\nconst BondToken: React.FC<any> = ({ type }) => {\r\n  const { account } = useWallet()\r\n  const contract = useTreasury(type)\r\n  const bondBalance = useTokenBalance(QuoteToken.SBO)\r\n  const cashStat = useCashPriceInEstimatedTWAP(type)\r\n  const [burnable, redeemable] = useBondStats(type)\r\n\r\n  const token = useMemo(() => type === PegType.SDO ? QuoteToken.SDO : QuoteToken.SBNB, [type])\r\n\r\n  const handleBuyBonds = useCallback(\r\n    async (amount: string) => {\r\n      if (!amount) return\r\n      const amountBig = new BigNumber(amount).times(new BigNumber(10).pow(18))\r\n      const priceBig = new BigNumber(cashStat).times(new BigNumber(10).pow(18))\r\n      await contract.methods.buyBonds(amountBig, priceBig).send({ from: account })\r\n    },\r\n    [cashStat, account, contract.methods],\r\n  )\r\n\r\n  const handleRedeemBonds = useCallback(\r\n    async (amount: string) => {\r\n      if (!amount) return\r\n      const amountBig = new BigNumber(amount).times(new BigNumber(10).pow(18))\r\n      const priceBig = new BigNumber(cashStat).times(new BigNumber(10).pow(18))\r\n      await contract.methods.redeemBonds(amountBig, priceBig).send({ from: account })\r\n    },\r\n    [cashStat, account, contract.methods],\r\n  )\r\n  const isBondRedeemable = useMemo(() => cashStat.gt(BOND_REDEEM_PRICE_BN) && Number(redeemable) > 0, [\r\n    cashStat,\r\n    redeemable,\r\n  ])\r\n  const isBondPurchasable = useMemo(() => Number(cashStat) < 1.0, [cashStat])\r\n  const description = useMemo(() => (isBondPurchasable ? 'Burnable Dollars' : 'Redeemable Bonds'), [isBondPurchasable])\r\n\r\n  return account ? (\r\n    <>\r\n      <StyledBond>\r\n        <StyledCardWrapper>\r\n          <ExchangeCard\r\n            action=\"Purchase\"\r\n            fromToken={token}\r\n            toToken={QuoteToken.SBO}\r\n            priceDesc={\r\n              !isBondPurchasable\r\n                ? `${token} is over peg`\r\n                : `${Math.floor(100 / cashStat.toNumber() - 100)}% return when ${token} is over`\r\n            }\r\n            onExchange={handleBuyBonds}\r\n            disabled={!isBondPurchasable}\r\n            type={type}\r\n          />\r\n        </StyledCardWrapper>\r\n        <Spacer />\r\n        <StyledCardWrapper>\r\n          <ExchangeStat\r\n            description={description}\r\n            label={isBondPurchasable ? burnable?.toFixed(3) : redeemable?.toFixed(3)}\r\n          />\r\n          <Spacer />\r\n          <ExchangeStat\r\n            description=\"Last-Hour TWAP Price\"\r\n            label={`💰 ${token} = $${cashStat?.toFixed(3) || '-'}`}\r\n          />\r\n        </StyledCardWrapper>\r\n        <Spacer />\r\n        <StyledCardWrapper>\r\n          <ExchangeCard\r\n            action=\"Redeem\"\r\n            fromToken={QuoteToken.SBO}\r\n            toToken={token}\r\n            priceDesc={`${getDisplayBalance(bondBalance)} ${token} Available`}\r\n            onExchange={handleRedeemBonds}\r\n            disabled={!isBondRedeemable}\r\n            disabledDescription={isBondRedeemable ? `Enabled when ${token} over peg` : 'Redeem'}\r\n            type={type}\r\n          />\r\n        </StyledCardWrapper>\r\n      </StyledBond>\r\n    </>\r\n  ) : (\r\n    <UnlockButton mt=\"8px\" fullWidth />\r\n  )\r\n}\r\n\r\nconst StyledBond = styled.div`\r\n  display: flex;\r\n  width: 960px;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`\r\n\r\nexport default BondToken\r\n","import React from 'react'\r\nimport Page from 'components/layout/Page'\r\nimport { Heading } from 'uikit'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport { PegType } from 'config/constants/types'\r\nimport { BoardTabButtons } from 'views/Boardroom/Boardroom'\r\nimport BondToken from './BondToken'\r\n\r\nconst Bond: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n\r\n  return (\r\n    <Page>\r\n      <FlexLayout>\r\n        <Heading as=\"h1\" size=\"lg\" mb=\"50px\" style={{ textAlign: 'center' }}>\r\n          💰 Bonds\r\n        </Heading>\r\n        <BoardTabButtons />\r\n      </FlexLayout>\r\n      <Route exact path={`${path}`}>\r\n        <BondToken type={PegType.SDO} />\r\n      </Route>\r\n      <Route exact path={`${path}/sbnb`}>\r\n        <Heading size=\"lg\">Soon...</Heading>\r\n      </Route>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Bond\r\n"],"sourceRoot":""}