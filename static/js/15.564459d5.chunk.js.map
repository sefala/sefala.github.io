{"version":3,"sources":["views/Bonds/components/ExchangeCard.tsx","views/Bonds/components/ExchangeStat.tsx","views/Bonds/Bond.tsx"],"names":["StyledCardTitle","styled","div","props","theme","colors","primary","spacing","StyledCardActions","StyledDesc","span","tertiary","StyledCardContentInner","ExchangeCard","action","fromToken","toToken","priceDesc","onExchange","disabled","disabledDescription","useState","requestedApproval","setRequestedApproval","balance","useTokenBalance","useApproveTreasury","onApprove","isApproved","handleApprove","useCallback","a","console","error","useModal","DepositModal","max","onConfirm","tokenName","onPresentDeposit","token","toLocaleLowerCase","onClick","secondary","ExchangeStat","description","label","launchTime","Date","BOND_REDEEM_PRICE_BN","BigNumber","pow","multipliedBy","dividedBy","Wrapper","BondHeader","as","size","mb","style","textAlign","StyledBond","StyledCardWrapper","Bond","account","useWallet","contract","useTreasury","bondBalance","QuoteToken","SBO","cashStat","useCashPriceInEstimatedTWAP","useBondStats","burnable","redeemable","handleBuyBonds","amount","amountBig","times","priceBig","methods","buyBonds","send","from","handleRedeemBonds","redeemBonds","isBondRedeemable","useMemo","gt","isBondPurchasable","Number","now","getTime","Page","SDO","Math","floor","toNumber","Spacer","toFixed","getDisplayBalance","UnlockButton","mt","fullWidth","LaunchCountdown","deadline"],"mappings":"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","file":"static/js/15.564459d5.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport { useApproveTreasury } from 'hooks/useApprove'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport styled from 'styled-components'\r\nimport { Button, Card, useModal } from 'uikit'\r\nimport DepositModal from 'views/Farms/components/DepositModal'\r\nimport { CardLogo } from 'views/Home/Home'\r\n\r\ninterface ExchangeCardProps {\r\n  action: string\r\n  fromToken: QuoteToken\r\n  toToken: QuoteToken\r\n  priceDesc: string\r\n  onExchange: (amount: string) => void\r\n  disabled?: boolean\r\n  disabledDescription?: string\r\n}\r\n\r\nconst ExchangeCard: React.FC<ExchangeCardProps> = ({\r\n  action,\r\n  fromToken,\r\n  toToken,\r\n  priceDesc,\r\n  onExchange,\r\n  disabled = false,\r\n  disabledDescription,\r\n}) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const balance = useTokenBalance(fromToken)\r\n  const { onApprove, isApproved } = useApproveTreasury(fromToken)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const [onPresentDeposit] = useModal(<DepositModal max={balance} onConfirm={onExchange} tokenName={fromToken} />)\r\n\r\n  return (\r\n    <Card>\r\n      <CardLogo token={toToken.toLocaleLowerCase()}>\r\n        <StyledCardContentInner>\r\n          <StyledCardTitle>{`${action} ${toToken}`}</StyledCardTitle>\r\n          <StyledDesc>{priceDesc}</StyledDesc>\r\n          <StyledCardActions>\r\n            {!isApproved && !disabled ? (\r\n              <Button disabled={requestedApproval} onClick={handleApprove}>\r\n                {`Approve ${fromToken}`}\r\n              </Button>\r\n            ) : (\r\n              <Button onClick={onPresentDeposit} disabled={disabled}>\r\n                {disabledDescription || action}\r\n              </Button>\r\n            )}\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardLogo>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst StyledCardTitle = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  height: 64px;\r\n  justify-content: center;\r\n  margin-top: ${(props) => -props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledDesc = styled.span`\r\n  color: ${(props) => props.theme.colors.tertiary};\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default ExchangeCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from 'uikit'\r\n\r\ninterface ExchangeStatProps {\r\n  description: string\r\n  label: string\r\n}\r\n\r\nconst ExchangeStat: React.FC<ExchangeStatProps> = ({ description, label }) => {\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <StyledCardContentInner>\r\n          <StyledCardTitle>{label}</StyledCardTitle>\r\n          <StyledDesc>{description}</StyledDesc>\r\n        </StyledCardContentInner>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst StyledCardTitle = styled.div`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\r\n`\r\n\r\nconst StyledDesc = styled.span`\r\n  color: ${(props) => props.theme.colors.secondary};\r\n  text-align: center;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: ${(props) => props.theme.spacing[2]}px;\r\n`\r\n\r\nexport default ExchangeStat\r\n","import React, { useCallback, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport Page from 'components/layout/Page'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Heading } from 'uikit'\r\nimport Spacer from 'components/Spacer'\r\nimport { useBondStats, useCashPriceInEstimatedTWAP } from 'hooks/useExitBoardroom'\r\nimport { getDisplayBalance } from 'utils/formatBalance'\r\nimport { useTreasury } from 'hooks/useContract'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport LaunchCountdown from 'components/LaunchCountdown'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport ExchangeCard from './components/ExchangeCard'\r\nimport ExchangeStat from './components/ExchangeStat'\r\n\r\nconst launchTime = new Date(1618488000000)\r\n\r\nconst BOND_REDEEM_PRICE = 1.01\r\nconst BOND_REDEEM_PRICE_BN = new BigNumber(10).pow(18).multipliedBy(101).dividedBy(100)\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst BondHeader = () => (\r\n  <Heading as=\"h1\" size=\"lg\" mb=\"50px\" style={{ textAlign: 'center' }}>\r\n    💰 Bonds\r\n  </Heading>\r\n)\r\n\r\nconst Bond: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const contract = useTreasury()\r\n  const bondBalance = useTokenBalance(QuoteToken.SBO)\r\n  const cashStat = useCashPriceInEstimatedTWAP()\r\n  const [burnable, redeemable] = useBondStats()\r\n\r\n  const handleBuyBonds = useCallback(\r\n    async (amount: string) => {\r\n      const amountBig = new BigNumber(amount).times(new BigNumber(10).pow(18))\r\n      const priceBig = new BigNumber(cashStat).times(new BigNumber(10).pow(18))\r\n      await contract.methods.buyBonds(amountBig, priceBig).send({ from: account })\r\n    },\r\n    [cashStat, account, contract.methods],\r\n  )\r\n\r\n  const handleRedeemBonds = useCallback(\r\n    async (amount: string) => {\r\n      const amountBig = new BigNumber(amount).times(new BigNumber(10).pow(18))\r\n      const priceBig = new BigNumber(cashStat).times(new BigNumber(10).pow(18))\r\n      await contract.methods.redeemBonds(amountBig, priceBig).send({ from: account })\r\n    },\r\n    [cashStat, account, contract.methods],\r\n  )\r\n  const isBondRedeemable = useMemo(() => cashStat.gt(BOND_REDEEM_PRICE_BN), [cashStat])\r\n  const isBondPurchasable = useMemo(() => Number(cashStat) < 1.0, [cashStat])\r\n  const description = useMemo(() => (isBondPurchasable ? 'Burnable Dollars' : 'Redeemable Bonds'), [isBondPurchasable])\r\n\r\n  const isLaunched = Date.now() >= launchTime.getTime()\r\n\r\n  if (!isLaunched) {\r\n    return (\r\n      <Page>\r\n        <BondHeader />\r\n        <Wrapper>\r\n          <LaunchCountdown deadline={launchTime} />\r\n        </Wrapper>\r\n      </Page>\r\n    )\r\n  }\r\n  return (\r\n    <Page>\r\n      <BondHeader />\r\n      {account ? (\r\n        <>\r\n          <StyledBond>\r\n            <StyledCardWrapper>\r\n              <ExchangeCard\r\n                action=\"Purchase\"\r\n                fromToken={QuoteToken.SDO}\r\n                toToken={QuoteToken.SBO}\r\n                priceDesc={\r\n                  !isBondPurchasable\r\n                    ? 'SDO is over $1'\r\n                    : `${Math.floor(100 / cashStat.toNumber() - 100)}% return when SDO > $1`\r\n                }\r\n                onExchange={handleBuyBonds}\r\n                disabled={isBondRedeemable}\r\n              />\r\n            </StyledCardWrapper>\r\n            <Spacer />\r\n            <StyledCardWrapper>\r\n              <ExchangeStat\r\n                description={description}\r\n                label={isBondPurchasable ? burnable?.toFixed(3) : redeemable?.toFixed(3)}\r\n              />\r\n              <Spacer />\r\n              <ExchangeStat\r\n                description=\"Last-Hour TWAP Price\"\r\n                label={`💰 ${QuoteToken.SDO} = $${cashStat?.toFixed(3) || '-'}`}\r\n              />\r\n            </StyledCardWrapper>\r\n            <Spacer />\r\n            <StyledCardWrapper>\r\n              <ExchangeCard\r\n                action=\"Redeem\"\r\n                fromToken={QuoteToken.SBO}\r\n                toToken={QuoteToken.SDO}\r\n                priceDesc={`${getDisplayBalance(bondBalance)} SDO Available`}\r\n                onExchange={handleRedeemBonds}\r\n                disabled={!isBondRedeemable}\r\n                disabledDescription={!isBondRedeemable ? `Enabled when SDO > $${BOND_REDEEM_PRICE}` : null}\r\n              />\r\n            </StyledCardWrapper>\r\n          </StyledBond>\r\n        </>\r\n      ) : (\r\n        <UnlockButton mt=\"8px\" fullWidth />\r\n      )}\r\n    </Page>\r\n  )\r\n}\r\n\r\nconst StyledBond = styled.div`\r\n  display: flex;\r\n  width: 960px;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`\r\n\r\nexport default Bond\r\n"],"sourceRoot":""}