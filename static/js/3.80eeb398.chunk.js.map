{"version":3,"sources":["components/Spacer/Spacer.tsx","components/layout/Flex.tsx","utils/formatBalance.ts","utils/callHelpers.ts","components/Value/Value.tsx","components/Label/Label.tsx","utils/translateTextHelpers.ts","hooks/useI18n.ts","views/Home/components/CardValue.tsx","views/Home/components/CakeStats.tsx","views/Home/Home.tsx","utils/erc20.ts","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/ModalActions/ModalActions.tsx","components/UnlockButton.tsx","views/Farms/components/DepositModal.tsx","hooks/useBlock.ts","hooks/useApprove.ts","hooks/useTokenBalance.ts","hooks/useExitBoardroom.ts"],"names":["StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","FlexLayout","getDisplayBalance","balance","decimals","fractionDigits","number","getBalance","toFixed","getBalanceNumber","displayBalance","BigNumber","dividedBy","pow","toNumber","getBalanceBig","getFullDisplayBalance","approve","lpContract","masterChefContract","account","a","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","times","toString","on","tx","transactionHash","restake","stakeReward","unstake","withdraw","harvest","unstakeBoardroom","contract","stakeBoardroom","StyledValue","theme","colors","primary","Value","value","prefix","fontSize","useState","start","updateStart","end","updateEnd","useEffect","style","undefined","duration","separator","StyledLabel","isFinished","Label","text","variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","data","stringId","translatedString","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","TranslationsContext","length","CardValue","useCountUp","countUp","update","updateValue","useRef","current","color","bold","CakeStats","totalValue","useTotalValue","flexDirection","alignContent","justifyContent","mb","CardLogo","CardBody","token","StyledCardHeader","CenterHeading","Heading","Logo","Home","price","usePriceDollar","priceS","usePriceShare","priceB","usePriceBond","useSupplyState","totalSdo","totalSso","totalSbo","sdoAddress","contracts","QuoteToken","SDO","process","ssoAddress","SSO","Page","Flex","small","href","mr","getContract","provider","Web3","eth","Contract","erc20","getAllowance","allowance","call","getTokenBalance","tokenAddress","userAddress","balanceOf","StyledInputWrapper","input","radii","default","StyledInput","Input","endAdornment","onChange","startAdornment","rest","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","TranslateString","toLocaleString","onClick","placeholder","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","map","child","i","UnlockButton","useWallet","connect","reset","onPresentConnectModal","useWalletModal","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","useCallback","e","currentTarget","handleSelectMax","title","variant","disabled","useBlock","BlockContext","useAllowance","isApproved","setIsApproved","block","then","x","isGreaterThan","useApproveBoardroom","useBoardroom","share","useToken","onApprove","useApproveTreasury","useTreasury","useApprove","type","dispatch","useDispatch","useMasterchef","fetchFarmUserDataAsync","useTokenBalance","setBalance","ethereum","fastRefresh","useRefresh","getTokenAddress","res","fetchBalance","oneUnit","useCashPriceInEstimatedTWAP","stat","setStat","slowRefresh","getDollarPrice","useTreasuryAllocationTimes","prevAllocation","Date","nextAllocation","nextEpochLength","time","setTime","getTreasury","calls","name","params","multicall","treasury","nextEpochPoint","lastEpochTimestamp","multipliedBy","fetchAllocations","useBondStats","setData","getBurnableDollarLeft","getRedeemableBonds","useExitBoardroom","onRedeem","exit","txHash"],"mappings":"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","file":"static/js/3.80eeb398.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import BigNumber from 'bignumber.js'\n\nexport const getDisplayBalance = (balance: BigNumber, decimals = 18, fractionDigits = 3) => {\n  const number = getBalance(balance, decimals - fractionDigits);\n  return (number / 10 ** fractionDigits).toFixed(fractionDigits);\n};\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getBalanceBig = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance\n}\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n\nexport function getBalance(balance: BigNumber, decimals = 18) : number {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toNumber()\n}\n\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) =>\r\n  lpContract.methods.approve(masterChefContract.options.address, ethers.constants.MaxUint256).send({ from: account })\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\nexport const restake = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .stakeReward(pid)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstakeBoardroom = async (contract, amount, account) => {\r\n  return contract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const stakeBoardroom = async (contract, amount, account) => {\r\n  return contract.methods\r\n    .stake(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\n\ninterface ValueProps {\n  value: string | number\n  decimals?: number\n  prefix?: string\n  fontSize?: string | number\n}\n\nconst Value: React.FC<ValueProps> = ({ value, decimals, prefix= '', fontSize = '30px' }) => {\n  const [start, updateStart] = useState(0)\n  const [end, updateEnd] = useState(0)\n\n  useEffect(() => {\n    if (typeof value === 'number') {\n      updateStart(end)\n      updateEnd(value)\n    }\n  }, [value])\n\n  return (\n    <StyledValue style={{ fontSize }}>\n      {typeof value === 'string' ? (\n        value\n      ) : (\n        <CountUp\n          start={start}\n          end={end}\n          decimals={\n            // eslint-disable-next-line no-nested-ternary\n            decimals !== undefined ? decimals : end < 0 ? 4 : end > 1e5 ? 0 : 3\n          }\n          duration={1}\n          separator=\",\"\n          prefix={prefix}\n        />\n      )}\n    </StyledValue>\n  )\n}\n\nconst StyledValue = styled.div`\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 30px;\n  font-weight: 900;\n`\n\nexport default Value\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from 'uikit'\n\ninterface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  prefix?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px', prefix }) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text color=\"textSubtle\" bold fontSize={fontSize}>\n      {prefix}{countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import React from 'react'\nimport { Heading, Flex } from 'uikit'\nimport CardValue from './CardValue'\nimport { useTotalValue } from '../../../state/hooks'\n\nconst CakeStats = () => {\n  const totalValue = useTotalValue()\n\n  return (\n    <Flex flexDirection=\"column\" alignContent=\"center\" justifyContent=\"center\">\n      <Heading size=\"lg\" mb=\"24px\">\n        Total Value Locked (TVL)\n      </Heading>\n      <CardValue value={totalValue.toNumber()} prefix=\"$\" decimals={2} />\n    </Flex>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Heading, LinkExternal } from 'uikit'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useSupplyState } from 'hooks/useHarvestFromBoardroom'\nimport { usePriceBond, usePriceDollar, usePriceShare } from 'state/hooks'\nimport Value from 'components/Value'\nimport Spacer from 'components/Spacer'\nimport Label from 'components/Label'\nimport { QuoteToken } from 'config/constants/types'\nimport contracts from 'config/constants/contracts'\nimport CakeStats from './components/CakeStats'\n\nexport const CardLogo = styled(CardBody)<{ token: string }>`\n  background-image: url('/images/tokens/${({ token }) => token}.png');\n  background-repeat: no-repeat;\n  background-position: center 10px;\n  background-size: 100px 100px;\n  padding-top: 120px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n`\n\nconst CenterHeading = styled(Heading)`\n  text-align: center;\n`\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst Logo = styled.div`\n  background-image: url('/images/supra.png');\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  height: 80px;\n  width: 400px;\n`\n\nconst Home: React.FC = () => {\n  const price = usePriceDollar()\n  const priceS = usePriceShare()\n  const priceB = usePriceBond()\n  const [totalSdo, totalSso, totalSbo] = useSupplyState()\n  const sdoAddress = contracts[QuoteToken.SDO][CHAIN_ID]\n  const ssoAddress = contracts[QuoteToken.SSO][CHAIN_ID]\n\n  return (\n    <Page>\n      <FlexLayout>\n        <Logo />\n        <Spacer />\n        <CakeStats />\n      </FlexLayout>\n      <FlexLayout>\n        <Card>\n          <CardLogo token=\"sdo\">\n            <CenterHeading>Supra Dollar</CenterHeading>\n            <StyledCardHeader>\n              <Value value={totalSdo.toNumber()} />\n              <Label text=\"Circulating Supply\" />\n            </StyledCardHeader>\n            <StyledCardHeader>\n              <Value value={price.toNumber()} prefix=\"$\" />\n              <Label text=\"Price\" />\n            </StyledCardHeader>\n            <StyledCardHeader>\n              <LinkExternal small href={`https://dex.slime.finance/#/swap?outputCurrency=${sdoAddress}`} mr=\"16px\">\n                Buy SDO\n              </LinkExternal>\n            </StyledCardHeader>\n          </CardLogo>\n        </Card>\n        <Card>\n          <CardLogo token=\"sso\">\n            <CenterHeading>Supra Dollar Share</CenterHeading>\n            <StyledCardHeader>\n              <Value value={totalSso.toNumber()} />\n              <Label text=\"Total Supply\" />\n            </StyledCardHeader>\n            <StyledCardHeader>\n              <Value value={priceS.toNumber()} prefix=\"$\" />\n              <Label text=\"Price\" />\n            </StyledCardHeader>\n            <StyledCardHeader>\n              <LinkExternal small href={`https://dex.slime.finance/#/swap?outputCurrency=${ssoAddress}`} mr=\"16px\">\n                Buy SSO\n              </LinkExternal>\n            </StyledCardHeader>\n          </CardLogo>\n        </Card>\n        <Card>\n          <CardLogo token=\"sbo\">\n            <CenterHeading>Supra Dollar Bond</CenterHeading>\n            <StyledCardHeader>\n              <Value value={totalSbo.toNumber()} />\n              <Label text=\"Circulating Supply\" />\n            </StyledCardHeader>\n            <StyledCardHeader>\n              <Value value={priceB.toNumber()} prefix=\"$\" />\n              <Label text=\"Price\" />\n            </StyledCardHeader>\n          </CardLogo>\n        </Card>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nexport default Home\n","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange?: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value?: string\n  min?: number | string\n  max?: number | string\n  type?: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, startAdornment, ...rest }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput onChange={onChange} {...rest} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from 'uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {\n        depositFeeBP > 0 ?\n          <StyledMaxText>\n            Deposit Fee: {new BigNumber(value || 0).times(depositFeeBP/10000).toString()} {symbol}\n          </StyledMaxText>\n          :\n          null\n      }\n\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport { Button, useWalletModal } from 'uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  depositFeeBP?: number\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', depositFeeBP = 0 }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Deposit ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        depositFeeBP={depositFeeBP}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          Cancel\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? 'Pending Confirmation' : 'Confirm'}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useDispatch } from 'react-redux'\nimport { FarmType, QuoteToken } from 'config/constants/types'\nimport { approve } from 'utils/callHelpers'\nimport BigNumber from 'bignumber.js'\nimport { getAllowance } from 'utils/erc20'\nimport { fetchFarmUserDataAsync } from '../state/farms'\nimport { useBoardroom, useMasterchef, useToken, useTreasury } from './useContract'\nimport useBlock from './useBlock'\n\nconst useApprove = (type: FarmType, lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\nexport const useAllowance = (lpContract: Contract, contract: Contract) => {\n  const [isApproved, setIsApproved] = useState(false)\n  const { account }: { account: string } = useWallet()\n  const block = useBlock()\n\n  useEffect(() => {\n    if (isApproved) return\n    getAllowance(lpContract, contract, account).then((x) => {\n      if (!account) return\n      const allowance = new BigNumber(x)\n      setIsApproved(allowance && allowance.isGreaterThan(0))\n    })\n  }, [account, contract, lpContract, block, isApproved])\n\n  return isApproved\n}\n\nexport const useApproveBoardroom = () => {\n  const { account }: { account: string } = useWallet()\n  const contract = useBoardroom()\n  const share = useToken(QuoteToken.SSO)\n  const isApproved = useAllowance(share, contract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(share, contract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, share, contract])\n\n  return { onApprove: handleApprove, isApproved }\n}\n\nexport const useApproveTreasury = (token: QuoteToken) => {\n  const { account }: { account: string } = useWallet()\n  const contract = useTreasury()\n  const tokenAddress = useToken(token)\n  const isApproved = useAllowance(tokenAddress, contract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(tokenAddress, contract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, tokenAddress, contract])\n\n  return { onApprove: handleApprove, isApproved }\n}\n\nexport default useApprove\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { QuoteToken } from 'config/constants/types'\nimport { getTokenAddress } from 'utils/addressHelpers'\nimport { provider } from 'web3-core'\nimport { getTokenBalance } from 'utils/erc20'\nimport useRefresh from './useRefresh'\nimport { useToken } from './useContract'\n\nconst useTokenBalance = (token: QuoteToken) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n  const tokenAddress = getTokenAddress(token)\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTokenBalanceInAddress = (tokenAddress: string, address: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { ethereum }: { ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, address)\n      setBalance(new BigNumber(res))\n    }\n\n    if (address && ethereum) {\n      fetchBalance()\n    }\n  }, [address, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = (token: QuoteToken) => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n  const contract = useToken(token)\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const supply = await contract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh, contract])\n\n  return totalSupply\n}\n\nexport default useTokenBalance\n","import { useCallback, useEffect, useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { TreasuryAllocationTime } from 'utils'\r\nimport { getTreasury } from 'utils/addressHelpers'\r\nimport multicall from 'utils/multicall'\r\nimport treasury from 'config/abi/treasury.json'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useBoardroom, useTreasury } from './useContract'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useExitBoardroom = () => {\r\n  const { account } = useWallet()\r\n  const contract = useBoardroom()\r\n\r\n  const handleExit = useCallback(async () => {\r\n    const txHash = await contract.methods.exit().send({ from: account })\r\n    return txHash\r\n  }, [account, contract])\r\n\r\n  return { onRedeem: handleExit }\r\n}\r\n\r\nconst oneUnit = new BigNumber(10).pow(18)\r\n\r\nexport const useCashPriceInEstimatedTWAP = () => {\r\n  const [stat, setStat] = useState(new BigNumber(10).div(oneUnit))\r\n  const contract = useTreasury()\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    contract.methods.getDollarPrice().call().then(x => setStat(new BigNumber(x).div(oneUnit)))\r\n    \r\n  }, [contract, slowRefresh])\r\n\r\n  return stat\r\n}\r\n\r\nexport const useTreasuryAllocationTimes = () => {\r\n  const [time, setTime] = useState<TreasuryAllocationTime>({\r\n    prevAllocation: new Date(),\r\n    nextAllocation: new Date(),\r\n    nextEpochLength: 0,\r\n  })\r\n  const contract = getTreasury()\r\n\r\n  useEffect(() => {\r\n    const fetchAllocations = async () => {\r\n      const calls = [\r\n        {\r\n          address: contract,\r\n          name: 'nextEpochPoint',\r\n          params: [],\r\n        },\r\n        {\r\n          address: contract,\r\n          name: 'lastEpochTime',\r\n          params: [],\r\n        },\r\n        {\r\n          address: contract,\r\n          name: 'nextEpochLength',\r\n          params: [],\r\n        },\r\n      ]\r\n\r\n      const [nextEpochPoint, lastEpochTimestamp, nextEpochLength] = await multicall((treasury as unknown) as any, calls)\r\n      setTime({\r\n        nextAllocation: new Date(new BigNumber(nextEpochPoint).multipliedBy(1000).toNumber()),\r\n        prevAllocation: new Date(new BigNumber(lastEpochTimestamp).multipliedBy(1000).toNumber()),\r\n        nextEpochLength: new BigNumber(nextEpochLength).toNumber(),\r\n      })\r\n    }\r\n\r\n    if (contract) fetchAllocations()\r\n  }, [contract])\r\n  return time\r\n}\r\n\r\nexport const useBondStats = () => {\r\n  const [data, setData] = useState([new BigNumber(0), new BigNumber(0)])\r\n  const contract = getTreasury()\r\n\r\n  useEffect(() => {\r\n    const fetchAllocations = async () => {\r\n      const calls = [\r\n        {\r\n          address: contract,\r\n          name: 'getBurnableDollarLeft',\r\n          params: [],\r\n        },\r\n        {\r\n          address: contract,\r\n          name: 'getRedeemableBonds',\r\n          params: [],\r\n        },\r\n      ]\r\n\r\n      const [getBurnableDollarLeft, getRedeemableBonds] = await multicall((treasury as unknown) as any, calls)\r\n      setData([new BigNumber(getBurnableDollarLeft).div(oneUnit), new BigNumber(getRedeemableBonds).div(oneUnit)])\r\n    }\r\n\r\n    if (contract) fetchAllocations()\r\n  }, [contract])\r\n  return data\r\n}\r\n\r\nexport default useExitBoardroom\r\n"],"sourceRoot":""}