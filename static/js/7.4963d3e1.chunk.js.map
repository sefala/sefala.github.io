{"version":3,"sources":["utils/translateTextHelpers.ts","hooks/useI18n.ts","components/layout/Flex.tsx","config/index.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","views/Farms/components/FarmCard/DetailsSection.tsx","components/Tags.tsx","views/Farms/components/FarmCard/CardHeading.tsx","utils/erc20.ts","components/UnlockButton.tsx","utils/callHelpers.ts","hooks/useApprove.ts","hooks/useStake.ts","hooks/useUnstake.ts","utils/formatBalance.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","hooks/useHarvest.ts","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/Farms.tsx"],"names":["variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","data","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","FlexLayout","styled","div","BigNumber","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","Wrapper","theme","colors","primary","ExpandableSectionButton","onClick","expanded","aria-label","role","color","bold","defaultProps","StyledLinkExternal","LinkExternal","getSwapUrl","swap","Swap","HYPR","SLIME","DetailsSection","farm","tokenSymbol","quoteTokenSymbol","isTokenOnly","lpAddresses","firstPart","QuoteToken","BNB","contracts","CHAIN_ID","secondPart","bscScanAddress","getUrls","liquidityUrlPathParts","totalValueFormated","totalValue","Number","toLocaleString","undefined","maximumFractionDigits","justifyContent","href","lpSymbol","external","NoFeeTag","variant","outline","startIcon","Flex","MultiplierTag","Tag","CardHeading","lpLabel","multiplier","farmImage","depositFee","alignItems","mb","src","alt","width","height","flexDirection","getContract","provider","address","Web3","eth","Contract","erc20","UnlockButton","props","TranslateString","useWallet","connect","reset","onPresentConnectModal","useWalletModal","approve","lpContract","masterChefContract","account","a","methods","options","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","times","pow","toString","on","tx","transactionHash","unstake","withdraw","harvest","useApprove","type","dispatch","useDispatch","useMasterchef","onApprove","useCallback","fetchFarmUserDataAsync","useStake","contractPid","onStake","txHash","console","info","useUnstake","onUnstake","getBalanceNumber","balance","decimals","displayBalance","dividedBy","toNumber","getFullDisplayBalance","toFixed","StyledSpacer","size","Spacer","s","spacing","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","map","child","i","StyledInputWrapper","input","radii","default","StyledInput","Input","endAdornment","onChange","startAdornment","rest","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","value","depositFeeBP","placeholder","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","e","currentTarget","handleSelectMax","title","disabled","WithdrawModal","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","rawStakedBalance","useModal","onPresentDeposit","onPresentWithdraw","mr","useHarvest","onReward","BalanceAndCompound","HarvestAction","earnings","rawEarningsBalance","Action","Divider","borderColor","CardActions","ethereum","earnToken","requestedApproval","setRequestedApproval","useFarmUser","allowance","lpAddress","process","tokenAddress","lpName","toUpperCase","isApproved","isGreaterThan","handleApprove","error","startTime","renderButton","Date","now","mt","fullWidth","date","renderer","countdownProps","hours","minutes","seconds","paddedSeconds","paddedMinutes","paddedHours","fontSize","pr","textTransform","RainbowLight","keyframes","StyledCardAccent","FCard","card","background","ExpandingWrapper","FarmCard","isSSO","showExpandableSection","setShowExpandableSection","toLowerCase","earnLabel","SSO","SDO","farmAPY","apy","minimumFractionDigits","style","display","CardActionsContainer","FarmTabButtons","useRouteMatch","url","isExact","activeIndex","as","Link","to","Farms","path","farmsLP","useFarms","necroPrice","usePriceVoodooBnb","bnbPrice","usePriceBnbBusd","fastRefresh","useRefresh","useEffect","activeFarms","filter","FarmType","SHARE","PARTNERS","inactiveFarms","DOLLAR","farmsList","farmsToDisplay","cakeRewardPerYear","tokenPerBLock","poolWeight","calculateTotal","comparedTo","Page","textAlign","exact"],"mappings":"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","file":"static/js/7.4963d3e1.chunk.js","sourcesContent":["import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from 'uikit'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? 'Hide' : 'Details'}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Link, LinkExternal } from 'uikit'\nimport { QuoteToken, Swap } from 'config/constants/types'\nimport contracts from 'config/constants/contracts'\nimport { FarmWithStakedValue } from 'state/types'\n\nexport interface ExpandableSectionProps {\n  farm: FarmWithStakedValue\n}\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  text-decoration: none;\n  font-weight: normal;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  align-items: center;\n\n  svg {\n    padding-left: 4px;\n    height: 18px;\n    width: auto;\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst getSwapUrl = (swap: Swap) => {\n  if (swap === Swap.HYPR) return 'https://swap.hyperjump.fi/#/'\n  if (swap === Swap.SLIME) return 'https://dex.slime.finance/#/'\n\n  return 'https://exchange.pancakeswap.finance/#/'\n}\n\nconst getUrls = ({ tokenSymbol, quoteTokenSymbol, isTokenOnly, lpAddresses, swap }: FarmWithStakedValue) => {\n  const firstPart = quoteTokenSymbol === QuoteToken.BNB ? 'ETH' : contracts[quoteTokenSymbol][CHAIN_ID]\n  const secondPart = contracts[tokenSymbol][CHAIN_ID]\n\n  const bscScanAddress = isTokenOnly\n    ? `https://bscscan.com/token/${secondPart}`\n    : `https://bscscan.com/token/${lpAddresses[CHAIN_ID]}`\n\n  return [`${getSwapUrl(swap)}add/${firstPart}/${secondPart}`, bscScanAddress]\n}\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({ farm }) => {\n  const [liquidityUrlPathParts, bscScanAddress] = getUrls(farm)\n  const totalValueFormated = farm.totalValue\n    ? `$${Number(farm.totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>Stake:</Text>\n        <StyledLinkExternal href={liquidityUrlPathParts}>{farm.lpSymbol}</StyledLinkExternal>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text>Total Liquidity:</Text>\n        <Text>{totalValueFormated}</Text>\n      </Flex>\n      <Flex justifyContent=\"flex-start\">\n        <Link external href={bscScanAddress} bold={false}>\n          View on BscScan\n        </Link>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport { Tag, VerifiedIcon } from 'uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nexport default NoFeeTag;","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image } from 'uikit'\nimport NoFeeTag from 'components/Tags'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  depositFee?: number\n  farmImage?: string\n  tokenSymbol?: string\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 0.25rem;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, multiplier, farmImage, tokenSymbol, depositFee }) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Image src={`/images/farms/${farmImage}.png`} alt={tokenSymbol} width={64} height={64} />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel}</Heading>\n        <Flex justifyContent=\"center\">\n          {depositFee === 0 ? <NoFeeTag /> : null}\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import React from 'react'\nimport { Button, useWalletModal } from 'uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) =>\r\n  lpContract.methods.approve(masterChefContract.options.address, ethers.constants.MaxUint256).send({ from: account })\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\nexport const restake = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .stakeReward(pid)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useDispatch } from 'react-redux'\nimport { FarmType } from 'config/constants/types'\nimport { approve } from 'utils/callHelpers'\nimport { fetchFarmUserDataAsync } from '../state/farms'\nimport { useMasterchef } from './useContract'\n\nconst useApprove = (type: FarmType, lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\nexport  default useApprove","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { Farm } from 'state/types'\nimport { stake, restake } from 'utils/callHelpers'\nimport { useMasterchef } from './useContract'\nimport { fetchFarmUserDataAsync } from '../state/farms'\n\nexport const useStake = ({ contractPid, type }: Farm) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, contractPid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, contractPid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useReStake = ({ contractPid, type }: Farm) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleStake = useCallback(async () => {\n    const txHash = await restake(masterChefContract, contractPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    console.info(txHash)\n  }, [account, dispatch, masterChefContract, contractPid])\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { Farm } from 'state/types'\nimport { unstake } from 'utils/callHelpers'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useMasterchef } from './useContract'\n\nconst useUnstake = ({ contractPid, type }: Farm) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, contractPid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, contractPid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getBalanceBig = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance\n}\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange?: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value?: string\n  min?: number | string\n  max?: number | string\n  type?: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, startAdornment, ...rest }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput onChange={onChange} {...rest} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from 'uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {\n        depositFeeBP > 0 ?\n          <StyledMaxText>\n            {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP/10000).toString()} {symbol}\n          </StyledMaxText>\n          :\n          null\n      }\n\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  depositFeeBP?: number\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', depositFeeBP = 0 }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Deposit ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        depositFeeBP={depositFeeBP}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          Cancel\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? 'Pending Confirmation' : 'Confirm'}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from 'uikit'\nimport { useStake } from 'hooks/useStake'\nimport { FarmWithStakedValue } from 'state/types'\nimport useUnstake from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  farm: FarmWithStakedValue\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({ stakedBalance, tokenBalance, farm }) => {\n  const { onStake } = useStake(farm)\n  const { onUnstake } = useUnstake(farm)\n\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={farm.lpSymbol} depositFeeBP={farm.depositFeeBP} />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={farm.lpSymbol} />,\n  )\n\n  const renderStakingButtons = () => {\n    return rawStakedBalance === 0 ? (\n      <Button onClick={onPresentDeposit}>Stake</Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" />\n        </IconButton>\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\n          <AddIcon color=\"primary\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { Farm } from 'state/types'\nimport { harvest } from 'utils/callHelpers'\nimport { useMasterchef } from './useContract'\nimport { fetchFarmUserDataAsync } from '../state/farms'\n\nconst useHarvest = ({ contractPid, type }: Farm) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, contractPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, contractPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvest\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from 'uikit'\nimport useHarvest from 'hooks/useHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport styled from 'styled-components'\nimport { Farm } from 'state/types'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  farm: Farm\n}\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n`\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, farm }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(farm)\n\n  const rawEarningsBalance = getBalanceNumber(earnings)\n  const displayBalance = rawEarningsBalance.toLocaleString()\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      <BalanceAndCompound>\n        <Button\n          disabled={rawEarningsBalance === 0 || pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n            setPendingTx(false)\n          }}\n        >\n          Harvest\n        </Button>\n      </BalanceAndCompound>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import React, { useMemo, useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { provider } from 'web3-core'\nimport { getContract } from 'utils/erc20'\nimport { Button, Flex, Text } from 'uikit'\nimport { FarmWithStakedValue } from 'state/types'\nimport contracts from 'config/constants/contracts'\nimport { useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\nimport useApprove from 'hooks/useApprove'\nimport Countdown, { CountdownRenderProps } from 'react-countdown'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  ethereum?: provider\n  account?: string\n  earnToken?: string\n}\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, ethereum, account, earnToken }) => {\n  const TranslateString = useI18n()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(farm.pid)\n  const lpAddress = farm.lpAddresses[CHAIN_ID]\n  const tokenAddress = contracts[farm.tokenSymbol][CHAIN_ID]\n  const lpName = farm.lpSymbol.toUpperCase()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpContract = useMemo(() => getContract(ethereum as provider, farm.isTokenOnly ? tokenAddress : lpAddress), [\n    ethereum,\n    lpAddress,\n    tokenAddress,\n    farm.isTokenOnly,\n  ])\n\n  const { onApprove } = useApprove(farm.type, lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        farm={farm}\n      />\n    ) : (\n      <Button mt=\"8px\" fullWidth disabled={requestedApproval} onClick={handleApprove}>\n        {TranslateString(999, 'Approve Contract')}\n      </Button>\n    )\n  }\n\n  const renderer = (countdownProps: CountdownRenderProps) => {\n    const { hours, minutes, seconds } = countdownProps\n    const paddedSeconds = seconds < 10 ? `0${seconds}` : seconds\n    const paddedMinutes = minutes < 10 ? `0${minutes}` : minutes\n    const paddedHours = hours < 10 ? `0${hours}` : hours\n    return (\n      <>\n        <Divider />\n        <Text fontSize=\"14px\" pr=\"3px\">\n          {farm.lpSymbol} pool starts: {paddedHours}:{paddedMinutes}:{paddedSeconds}\n        </Text>\n      </>\n    )\n  }\n  let { startTime } = farm\n  if (!startTime) startTime = 0\n  // setStartTime(500000000);\n  const poolActive = startTime * 1000 - Date.now() <= 0 // startTime * 1000 - Date.now() <= 0\n\n  const renderButton = !poolActive ? (\n    <Countdown date={new Date(startTime * 1000)} renderer={renderer} />\n  ) : (\n    renderApprovalOrStakeButton()\n  )\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {earnToken}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          Earned\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} farm={farm} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {lpName}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          Staked\n        </Text>\n      </Flex>\n      {!account ? <UnlockButton mt=\"8px\" fullWidth /> : renderButton}\n    </Action>\n  )\n}\n\nexport default CardActions\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from 'uikit'\nimport { FarmWithStakedValue } from 'state/types'\nimport { QuoteToken } from 'config/constants/types'\nimport { provider } from 'web3-core'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\n\nconst RainbowLight = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n  min-height: 476px;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 18px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  ethereum?: provider\n  account?: string\n  isSSO: boolean\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, ethereum, account, isSSO }) => {\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const farmImage = farm.isTokenOnly\n    ? farm.tokenSymbol.toLowerCase()\n    : `${farm.tokenSymbol.toLowerCase()}-${farm.quoteTokenSymbol.toLowerCase()}`\n\n  const earnLabel = isSSO ? QuoteToken.SSO : QuoteToken.SDO\n\n  const farmAPY =\n    farm.apy &&\n    farm.apy.times(new BigNumber(100)).toNumber().toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })\n\n  return (\n    <FCard>\n      {farm.tokenSymbol === earnLabel && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={farm.lpSymbol}\n        multiplier={farm.multiplier}\n        depositFee={farm.depositFeeBP}\n        farmImage={farmImage}\n        tokenSymbol={farm.tokenSymbol}\n      />\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Text>APR:</Text>\n        <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n          {farm.apy ? <>{farmAPY}%</> : <Skeleton height={24} width={80} />}\n        </Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text>Earn:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text style={{ fontSize: '24px' }}>Deposit Fee:</Text>\n        <Text bold style={{ fontSize: '24px' }}>\n          {farm.depositFeeBP / 100}%\n        </Text>\n      </Flex>\n      <CardActionsContainer farm={farm} ethereum={ethereum} account={account} earnToken={earnLabel} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection farm={farm} />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from 'uikit'\n\nconst FarmTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          Partners Banks\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/token`}>\n          Dollar Banks\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import React, { useEffect, useCallback } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { Heading } from 'uikit'\nimport { calculateTotal } from 'utils/getFarmConfig'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport { FarmWithStakedValue } from 'state/types'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceBnbBusd, usePriceVoodooBnb } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { FarmType } from 'config/constants/types'\nimport FarmCard from './components/FarmCard/FarmCard'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport { fetchFarmUserDataAsync } from '../../state/farms'\n\ninterface FarmProps {\n  isSSO: boolean\n}\n\nconst Farms: React.FC<FarmProps> = ({ isSSO }) => {\n  const { path } = useRouteMatch()\n  const farmsLP = useFarms()\n  const necroPrice = usePriceVoodooBnb()\n  const bnbPrice = usePriceBnbBusd()\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n  const activeFarms = isSSO\n    ? farmsLP.filter((farm) => farm.type === FarmType.SHARE)\n    : farmsLP.filter((farm) => farm.type === FarmType.PARTNERS)\n  const inactiveFarms = farmsLP.filter((farm) => farm.type === FarmType.DOLLAR)\n\n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay) => {\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        const cakeRewardPerBlock = new BigNumber(farm.tokenPerBLock || 1)\n          .times(new BigNumber(farm.poolWeight))\n          .div(new BigNumber(10).pow(18))\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n\n        let apy = necroPrice.times(cakeRewardPerYear)\n        const totalValue = calculateTotal(farm, bnbPrice, necroPrice)\n\n        if (totalValue.comparedTo(0) > 0) {\n          apy = apy.div(totalValue)\n        }\n\n        return { ...farm, totalValue, apy }\n      })\n\n      return farmsToDisplayWithAPY.map((farm) => (\n        <FarmCard key={farm.pid} farm={farm} ethereum={ethereum} account={account} isSSO={isSSO} />\n      ))\n    },\n    [bnbPrice, account, necroPrice, ethereum, isSSO],\n  )\n\n  return (\n    <Page>\n      <FlexLayout>\n        <Heading as=\"h1\" size=\"lg\" mb=\"50px\" style={{ textAlign: 'center' }}>\n          {isSSO ? '🏦 Pick a Share Bank' : '🏧 Pick a Bank'}\n        </Heading>\n        {!isSSO && <FarmTabButtons />}\n      </FlexLayout>\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          {farmsList(activeFarms)}\n        </Route>\n        {!isSSO && (\n          <Route exact path={`${path}/token`}>\n            {farmsList(inactiveFarms)}\n          </Route>\n        )}\n      </FlexLayout>\n    </Page>\n  )\n}\n\nexport default Farms\n"],"sourceRoot":""}