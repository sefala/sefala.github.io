{"version":3,"sources":["utils/translateTextHelpers.ts","hooks/useI18n.ts","utils/formatBalance.ts","utils/callHelpers.ts","utils/erc20.ts","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/layout/Flex.tsx","components/UnlockButton.tsx","views/Farms/components/DepositModal.tsx","hooks/useBlock.ts","hooks/useApprove.ts","hooks/useStake.ts","views/Farms/components/WithdrawModal.tsx","config/index.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","views/Farms/components/FarmCard/DetailsSection.tsx","components/Tags.tsx","views/Farms/components/FarmCard/CardHeading.tsx","hooks/useUnstake.ts","views/Farms/components/FarmCard/StakeAction.tsx","hooks/useHarvest.ts","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/Farms.tsx"],"names":["variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","data","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","getDisplayBalance","balance","decimals","fractionDigits","number","getBalance","toFixed","getBalanceNumber","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","approve","lpContract","masterChefContract","account","a","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","times","toString","on","tx","transactionHash","restake","stakeReward","unstake","withdraw","harvest","unstakeBoardroom","contract","stakeBoardroom","getContract","provider","Web3","eth","Contract","erc20","getAllowance","allowance","call","getTokenBalance","tokenAddress","userAddress","balanceOf","StyledInputWrapper","styled","div","props","theme","colors","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","startAdornment","rest","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","value","depositFeeBP","TranslateString","toLocaleString","size","onClick","placeholder","Spacer","s","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","map","child","i","FlexLayout","UnlockButton","useWallet","connect","reset","onPresentConnectModal","useWalletModal","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","useCallback","e","currentTarget","handleSelectMax","title","variant","disabled","useBlock","BlockContext","useAllowance","isApproved","setIsApproved","block","useEffect","then","x","isGreaterThan","useApproveBoardroom","useBoardroom","share","useToken","QuoteToken","SSO","onApprove","useApproveTreasury","token","useTreasury","useApprove","type","dispatch","useDispatch","useMasterchef","fetchFarmUserDataAsync","useStake","contractPid","onStake","useStakeToBoardroom","useWithdrawFromBoardroom","onWithdraw","WithdrawModal","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","Wrapper","ExpandableSectionButton","expanded","aria-label","role","color","bold","defaultProps","StyledLinkExternal","LinkExternal","getSwapUrl","swap","Swap","HYPR","SLIME","DetailsSection","farm","tokenSymbol","quoteTokenSymbol","isTokenOnly","lpAddresses","firstPart","BNB","contracts","CHAIN_ID","secondPart","bscScanAddress","getUrls","liquidityUrlPathParts","totalValueFormated","totalValue","Number","undefined","maximumFractionDigits","justifyContent","href","lpSymbol","external","NoFeeTag","outline","startIcon","Flex","MultiplierTag","Tag","CardHeading","lpLabel","multiplier","farmImage","depositFee","alignItems","mb","src","alt","width","height","flexDirection","useUnstake","onUnstake","txHash","console","info","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","rawStakedBalance","useModal","onPresentDeposit","onPresentWithdraw","mr","useHarvest","onReward","BalanceAndCompound","HarvestAction","earnings","rawEarningsBalance","Action","Divider","borderColor","CardActions","ethereum","earnToken","requestedApproval","setRequestedApproval","useFarmUser","lpAddress","process","lpName","toUpperCase","handleApprove","error","startTime","renderButton","Date","now","mt","fullWidth","date","renderer","countdownProps","hours","minutes","seconds","paddedSeconds","paddedMinutes","paddedHours","fontSize","pr","textTransform","RainbowLight","keyframes","StyledCardAccent","FCard","card","background","ExpandingWrapper","FarmCard","isSSO","showExpandableSection","setShowExpandableSection","toLowerCase","earnLabel","SDO","farmAPY","apy","style","display","isNaN","minimumFractionDigits","CardActionsContainer","FarmTabButtons","useRouteMatch","url","isExact","activeIndex","as","Link","to","Farms","path","farmsLP","useFarms","necroPrice","usePriceVoodooBnb","bnbPrice","usePriceBnbBusd","fastRefresh","useRefresh","activeFarms","filter","FarmType","SHARE","PARTNERS","inactiveFarms","DOLLAR","farmsList","farmsToDisplay","cakeRewardPerYear","tokenPerBLock","poolWeight","calculateTotal","comparedTo","Page","textAlign","exact"],"mappings":"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","file":"static/js/8.bca823ad.chunk.js","sourcesContent":["import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import BigNumber from 'bignumber.js'\n\nexport const getDisplayBalance = (balance: BigNumber, decimals = 18, fractionDigits = 3) => {\n  const number = getBalance(balance, decimals - fractionDigits);\n  return (number / 10 ** fractionDigits).toFixed(fractionDigits);\n};\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getBalanceBig = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance\n}\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n\nexport function getBalance(balance: BigNumber, decimals = 18) : number {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toNumber()\n}\n\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) =>\r\n  lpContract.methods.approve(masterChefContract.options.address, ethers.constants.MaxUint256).send({ from: account })\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\nexport const restake = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .stakeReward(pid)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstakeBoardroom = async (contract, amount, account) => {\r\n  return contract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const stakeBoardroom = async (contract, amount, account) => {\r\n  return contract.methods\r\n    .stake(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange?: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value?: string\n  min?: number | string\n  max?: number | string\n  type?: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, startAdornment, ...rest }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput onChange={onChange} {...rest} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from 'uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {\n        depositFeeBP > 0 ?\n          <StyledMaxText>\n            {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP/10000).toString()} {symbol}\n          </StyledMaxText>\n          :\n          null\n      }\n\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React from 'react'\nimport { Button, useWalletModal } from 'uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  depositFeeBP?: number\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', depositFeeBP = 0 }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Deposit ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        depositFeeBP={depositFeeBP}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          Cancel\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? 'Pending Confirmation' : 'Confirm'}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useDispatch } from 'react-redux'\nimport { FarmType, QuoteToken } from 'config/constants/types'\nimport { approve } from 'utils/callHelpers'\nimport BigNumber from 'bignumber.js'\nimport { getAllowance } from 'utils/erc20'\nimport { fetchFarmUserDataAsync } from '../state/farms'\nimport { useBoardroom, useMasterchef, useToken, useTreasury } from './useContract'\nimport useBlock from './useBlock'\n\nconst useApprove = (type: FarmType, lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\nexport const useAllowance = (lpContract: Contract, contract: Contract) => {\n  const [isApproved, setIsApproved] = useState(false)\n  const { account }: { account: string } = useWallet()\n  const block = useBlock()\n\n  useEffect(() => {\n    if (isApproved) return\n    getAllowance(lpContract, contract, account).then((x) => {\n      if (!account) return\n      const allowance = new BigNumber(x)\n      setIsApproved(allowance && allowance.isGreaterThan(0))\n    })\n  }, [account, contract, lpContract, block, isApproved])\n\n  return isApproved\n}\n\nexport const useApproveBoardroom = () => {\n  const { account }: { account: string } = useWallet()\n  const contract = useBoardroom()\n  const share = useToken(QuoteToken.SSO)\n  const isApproved = useAllowance(share, contract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(share, contract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, share, contract])\n\n  return { onApprove: handleApprove, isApproved }\n}\n\nexport const useApproveTreasury = (token: QuoteToken) => {\n  const { account }: { account: string } = useWallet()\n  const contract = useTreasury()\n  const tokenAddress = useToken(token)\n  const isApproved = useAllowance(tokenAddress, contract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(tokenAddress, contract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, tokenAddress, contract])\n\n  return { onApprove: handleApprove, isApproved }\n}\n\nexport default useApprove\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { Farm } from 'state/types'\nimport { stake, restake, stakeBoardroom, unstakeBoardroom } from 'utils/callHelpers'\nimport { useBoardroom, useMasterchef } from './useContract'\nimport { fetchFarmUserDataAsync } from '../state/farms'\n\nexport const useStake = ({ contractPid, type }: Farm) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      await stake(masterChefContract, contractPid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n    },\n    [account, dispatch, masterChefContract, contractPid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useStakeToBoardroom = () => {\n  const { account } = useWallet()\n  const contract = useBoardroom()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      await stakeBoardroom(contract, amount, account)\n    },\n    [account, contract],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useWithdrawFromBoardroom = () => {\n  const { account } = useWallet()\n  const contract = useBoardroom()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      await unstakeBoardroom(contract, amount, account)\n    },\n    [account, contract],\n  )\n\n  return { onWithdraw: handleStake }\n}\n\nexport const useReStake = ({ contractPid, type }: Farm) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleStake = useCallback(async () => {\n    const txHash = await restake(masterChefContract, contractPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    console.info(txHash)\n  }, [account, dispatch, masterChefContract, contractPid])\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from 'uikit'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? 'Hide' : 'Details'}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Link, LinkExternal } from 'uikit'\nimport { QuoteToken, Swap } from 'config/constants/types'\nimport contracts from 'config/constants/contracts'\nimport { FarmWithStakedValue } from 'state/types'\n\nexport interface ExpandableSectionProps {\n  farm: FarmWithStakedValue\n}\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  text-decoration: none;\n  font-weight: normal;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  align-items: center;\n\n  svg {\n    padding-left: 4px;\n    height: 18px;\n    width: auto;\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst getSwapUrl = (swap: Swap) => {\n  if (swap === Swap.HYPR) return 'https://swap.hyperjump.fi/#/'\n  if (swap === Swap.SLIME) return 'https://dex.slime.finance/#/'\n\n  return 'https://exchange.pancakeswap.finance/#/'\n}\n\nconst getUrls = ({ tokenSymbol, quoteTokenSymbol, isTokenOnly, lpAddresses, swap }: FarmWithStakedValue) => {\n  const firstPart = quoteTokenSymbol === QuoteToken.BNB ? 'ETH' : contracts[quoteTokenSymbol][CHAIN_ID]\n  const secondPart = contracts[tokenSymbol][CHAIN_ID]\n\n  const bscScanAddress = isTokenOnly\n    ? `https://bscscan.com/token/${secondPart}`\n    : `https://bscscan.com/token/${lpAddresses[CHAIN_ID]}`\n\n  return [`${getSwapUrl(swap)}add/${firstPart}/${secondPart}`, bscScanAddress]\n}\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({ farm }) => {\n  const [liquidityUrlPathParts, bscScanAddress] = getUrls(farm)\n  const totalValueFormated = farm.totalValue\n    ? `$${Number(farm.totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>Stake:</Text>\n        <StyledLinkExternal href={liquidityUrlPathParts}>{farm.lpSymbol}</StyledLinkExternal>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text>Total Liquidity:</Text>\n        <Text>{totalValueFormated}</Text>\n      </Flex>\n      <Flex justifyContent=\"flex-start\">\n        <Link external href={bscScanAddress} bold={false}>\n          View on BscScan\n        </Link>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport { Tag, VerifiedIcon } from 'uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nexport default NoFeeTag;","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image } from 'uikit'\nimport NoFeeTag from 'components/Tags'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  depositFee?: number\n  farmImage?: string\n  tokenSymbol?: string\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 0.25rem;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, multiplier, farmImage, tokenSymbol, depositFee }) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Image src={`/images/farms/${farmImage}.png`} alt={tokenSymbol} width={64} height={64} />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel}</Heading>\n        <Flex justifyContent=\"center\">\n          {depositFee === 0 ? <NoFeeTag /> : null}\n          <MultiplierTag variant=\"secondary\">{multiplier || '???'}</MultiplierTag>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { Farm } from 'state/types'\nimport { unstake } from 'utils/callHelpers'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useMasterchef } from './useContract'\n\nconst useUnstake = ({ contractPid, type }: Farm) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, contractPid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, contractPid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from 'uikit'\nimport { useStake } from 'hooks/useStake'\nimport { FarmWithStakedValue } from 'state/types'\nimport useUnstake from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  farm: FarmWithStakedValue\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({ stakedBalance, tokenBalance, farm }) => {\n  const { onStake } = useStake(farm)\n  const { onUnstake } = useUnstake(farm)\n\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={farm.lpSymbol} depositFeeBP={farm.depositFeeBP} />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={farm.lpSymbol} />,\n  )\n\n  const renderStakingButtons = () => {\n    return rawStakedBalance === 0 ? (\n      <Button onClick={onPresentDeposit}>Stake</Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" />\n        </IconButton>\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\n          <AddIcon color=\"primary\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { Farm } from 'state/types'\nimport { harvest } from 'utils/callHelpers'\nimport { useMasterchef } from './useContract'\nimport { fetchFarmUserDataAsync } from '../state/farms'\n\nconst useHarvest = ({ contractPid, type }: Farm) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef(type)\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, contractPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, contractPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvest\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from 'uikit'\nimport useHarvest from 'hooks/useHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport styled from 'styled-components'\nimport { Farm } from 'state/types'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  farm: Farm\n}\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n`\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, farm }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(farm)\n\n  const rawEarningsBalance = getBalanceNumber(earnings)\n  const displayBalance = rawEarningsBalance.toLocaleString()\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      <BalanceAndCompound>\n        <Button\n          disabled={rawEarningsBalance === 0 || pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n            setPendingTx(false)\n          }}\n        >\n          Harvest\n        </Button>\n      </BalanceAndCompound>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import React, { useMemo, useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { provider } from 'web3-core'\nimport { getContract } from 'utils/erc20'\nimport { Button, Flex, Text } from 'uikit'\nimport { FarmWithStakedValue } from 'state/types'\nimport contracts from 'config/constants/contracts'\nimport { useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\nimport useApprove from 'hooks/useApprove'\nimport Countdown, { CountdownRenderProps } from 'react-countdown'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  ethereum?: provider\n  account?: string\n  earnToken?: string\n}\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, ethereum, account, earnToken }) => {\n  const TranslateString = useI18n()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(farm.pid)\n  const lpAddress = farm.lpAddresses[CHAIN_ID]\n  const tokenAddress = contracts[farm.tokenSymbol][CHAIN_ID]\n  const lpName = farm.lpSymbol.toUpperCase()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpContract = useMemo(() => getContract(ethereum as provider, farm.isTokenOnly ? tokenAddress : lpAddress), [\n    ethereum,\n    lpAddress,\n    tokenAddress,\n    farm.isTokenOnly,\n  ])\n\n  const { onApprove } = useApprove(farm.type, lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        farm={farm}\n      />\n    ) : (\n      <Button mt=\"8px\" fullWidth disabled={requestedApproval} onClick={handleApprove}>\n        {TranslateString(999, 'Approve Contract')}\n      </Button>\n    )\n  }\n\n  const renderer = (countdownProps: CountdownRenderProps) => {\n    const { hours, minutes, seconds } = countdownProps\n    const paddedSeconds = seconds < 10 ? `0${seconds}` : seconds\n    const paddedMinutes = minutes < 10 ? `0${minutes}` : minutes\n    const paddedHours = hours < 10 ? `0${hours}` : hours\n    return (\n      <>\n        <Divider />\n        <Text fontSize=\"14px\" pr=\"3px\">\n          {farm.lpSymbol} pool starts: {paddedHours}:{paddedMinutes}:{paddedSeconds}\n        </Text>\n      </>\n    )\n  }\n  let { startTime } = farm\n  if (!startTime) startTime = 0\n  // setStartTime(500000000);\n  const poolActive = startTime * 1000 - Date.now() <= 0 // startTime * 1000 - Date.now() <= 0\n\n  const renderButton = !poolActive ? (\n    <Countdown date={new Date(startTime * 1000)} renderer={renderer} />\n  ) : (\n    renderApprovalOrStakeButton()\n  )\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {earnToken}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          Earned\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} farm={farm} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {lpName}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          Staked\n        </Text>\n      </Flex>\n      {!account ? <UnlockButton mt=\"8px\" fullWidth /> : renderButton}\n    </Action>\n  )\n}\n\nexport default CardActions\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from 'uikit'\nimport { FarmWithStakedValue } from 'state/types'\nimport { QuoteToken } from 'config/constants/types'\nimport { provider } from 'web3-core'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\n\nconst RainbowLight = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n  min-height: 476px;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  ethereum?: provider\n  account?: string\n  isSSO: boolean\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, ethereum, account, isSSO }) => {\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const farmImage = farm.isTokenOnly\n    ? farm.tokenSymbol.toLowerCase()\n    : `${farm.tokenSymbol.toLowerCase()}-${farm.quoteTokenSymbol.toLowerCase()}`\n\n  const earnLabel = isSSO ? QuoteToken.SSO : QuoteToken.SDO\n\n  const farmAPY = farm.apy && farm.apy.times(new BigNumber(100)).toNumber()\n\n  return (\n    <FCard>\n      {farm.tokenSymbol === earnLabel && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={farm.lpSymbol}\n        multiplier={farm.multiplier}\n        depositFee={farm.depositFeeBP}\n        farmImage={farmImage}\n        tokenSymbol={farm.tokenSymbol}\n      />\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Text>APR:</Text>\n        <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n          {farm.apy && !Number.isNaN(farmAPY) ? (\n            <>\n              {farmAPY.toLocaleString(undefined, {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              })}\n              %\n            </>\n          ) : (\n            <Skeleton height={24} width={80} />\n          )}\n        </Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text>Earn:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text style={{ fontSize: '24px' }}>Deposit Fee:</Text>\n        <Text bold style={{ fontSize: '24px' }}>\n          {farm.depositFeeBP ? `${farm.depositFeeBP / 100}%` : <Skeleton height={24} width={80} />}\n        </Text>\n      </Flex>\n      <CardActionsContainer farm={farm} ethereum={ethereum} account={account} earnToken={earnLabel} />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection farm={farm} />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from 'uikit'\n\nconst FarmTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          Partners Banks\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/token`}>\n          Dollar Banks\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import React, { useEffect, useCallback } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { Heading } from 'uikit'\nimport { calculateTotal } from 'utils/getFarmConfig'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport { FarmWithStakedValue } from 'state/types'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceBnbBusd, usePriceVoodooBnb } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { FarmType } from 'config/constants/types'\nimport FarmCard from './components/FarmCard/FarmCard'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport { fetchFarmUserDataAsync } from '../../state/farms'\n\ninterface FarmProps {\n  isSSO: boolean\n}\n\nconst Farms: React.FC<FarmProps> = ({ isSSO }) => {\n  const { path } = useRouteMatch()\n  const farmsLP = useFarms()\n  const necroPrice = usePriceVoodooBnb()\n  const bnbPrice = usePriceBnbBusd()\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n  const activeFarms = isSSO\n    ? farmsLP.filter((farm) => farm.type === FarmType.SHARE)\n    : farmsLP.filter((farm) => farm.type === FarmType.PARTNERS)\n  const inactiveFarms = farmsLP.filter((farm) => farm.type === FarmType.DOLLAR)\n\n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay) => {\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        const cakeRewardPerBlock = new BigNumber(farm.tokenPerBLock || 1)\n          .times(new BigNumber(farm.poolWeight))\n          .div(new BigNumber(10).pow(18))\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n\n        let apy = necroPrice.times(cakeRewardPerYear)\n        const totalValue = calculateTotal(farm, bnbPrice, necroPrice)\n\n        if (totalValue.comparedTo(0) > 0) {\n          apy = apy.div(totalValue)\n        }\n\n        return { ...farm, totalValue, apy }\n      })\n\n      return farmsToDisplayWithAPY.map((farm) => (\n        <FarmCard key={farm.pid} farm={farm} ethereum={ethereum} account={account} isSSO={isSSO} />\n      ))\n    },\n    [bnbPrice, account, necroPrice, ethereum, isSSO],\n  )\n\n  return (\n    <Page>\n      <FlexLayout>\n        <Heading as=\"h1\" size=\"lg\" mb=\"50px\" style={{ textAlign: 'center' }}>\n          {isSSO ? '🏦 Pick a Share Bank' : '🏧 Pick a Bank'}\n        </Heading>\n        {!isSSO && <FarmTabButtons />}\n      </FlexLayout>\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          {farmsList(activeFarms)}\n        </Route>\n        {!isSSO && (\n          <Route exact path={`${path}/token`}>\n            {farmsList(inactiveFarms)}\n          </Route>\n        )}\n      </FlexLayout>\n    </Page>\n  )\n}\n\nexport default Farms\n"],"sourceRoot":""}